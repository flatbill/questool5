{"version":3,"file":"main.js","mappings":"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AAEF;;;;;;GAMG;AACH,sEAAsE;;;;;;;;;;;;;;;;;ACfvB;AAEF;AACY;AACzD,iCAAiC;AACjC,IAAI,6EAAsB,EAAE;IAC1B,6DAAc,EAAE,CAAC;CAClB;AAED,wEAAwB,CAAC,eAAe,CAAC,sDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;ACVpC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,oDAAoD,OAAO;AAC3D,iFAAiF,WAAW;AAC5F;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA,iEAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/quest/quest.component.ts","./src/app/quest/quest.component.html","./src/environments/environment.ts","./src/main.ts","./src/utils/apiFauna.js","./src/utils/apiSupabase.js","./src/utils/getEnvVars.js"],"sourcesContent":["import {Component } from '@angular/core';\nimport apiFauna from 'src/utils/apiFauna' \n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n  siteTitle = ' QnA Tool by  Fly Tech Free'\n  // //initialCountInAppComponent: number = 10\n  // myCount: number = 1000;\n  // myFriend = '?'\n  // msgFromBeyond = '?'\n  // nango = 'nangoDude'\n  // gdArray1 = ['start1','start2','start3']\n\n  // parentFun2(event) { \n  //   this.myCount = event;\n  //   this.msgFromBeyond = 'msg from parentFun2'\n  //  }\n\n  // parentFun1(myFriendParmIn:string): void {\n  //   this.msgFromBeyond =   \" Msg from parentFun1 \"\n  //   this.myFriend = myFriendParmIn\n  // }\n  // parentFun3(gdaParmIn)   {\n  //   this.gdArray1 = gdaParmIn    //  ['cars','bars','guitars']\n  // }\n\n  ngOnInit() {\n  }\n\n    ////////////////////////////////////////////////////////////////\n    // launchQtRead01 = (e) => {\n    //   alert('running launchQtRead01')\n    //   //const wango = e.target.dataset.id\n    //   // Make API request\n    //   const wango = '276380634185728512'\n    //   api.qtRead01(wango).then(() => {\n    //     console.log(`qtRead01 ${wango}`)     \n    //   }).catch((e) => {\n    //     console.log(`qtRead01 error reading ${wango}`, e)\n    //   })\n    //   alert('done running launchQtRead01')\n    // } \n    /////////////////////////////////////////////////////////////////\n  \n    ////////////////////////////////////////////////////////////////\n    // launchQtRead02 = (e) => {\n    //   alert('running launchQtRead02')\n    //   //const tango = e.target.dataset.id\n    //   // Make API request\n    //   const tango = '276380634185728512'\n    //   api.qtRead02(tango).then(() => {\n    //     console.log(`qtRead02 ${tango}`)     \n    //   }).catch((e) => {\n    //     console.log(`qtRead02 error reading ${tango}`, e)\n    //   })\n    //   alert('done running launchQtRead02')\n    // } \n    /////////////////////////////////////////////////////////////////\n\n    ////////////////////////////////////////////////////////////////\n    // launchQtRead03 = (e) => {\n    //   alert('running launchQtRead03')\n    //   //const mango = e.target.dataset.id\n    //   // Make API request\n    //   const mango = '276380634185728512'\n    //   api.qtRead03(mango).then(() => {\n    //     console.log(`qtRead03 ${mango}`)     \n    //   }).catch((e) => {\n    //     console.log(`qtRead03 error reading ${mango}`, e)\n    //   })\n    //   alert('done running launchQtRead03')\n    // } \n    /////////////////////////////////////////////////////////////////\n}\n\n","\n<div class='has-background-primary'> \n  <h2 class=\"ml-3 subtitle\"> {{siteTitle}} </h2>\n</div>\n<app-quest></app-quest>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { QuestComponent } from './quest/quest.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HostListener, Component, OnInit } from '@angular/core'\nimport apiFauna from 'src/utils/apiFauna'\nimport apiSupabase from 'src/utils/apiSupabase'\n// import apiFirestore from 'src/utils/apiFirestore'\nimport getEnvVars from 'src/utils/getEnvVars'\n@Component({\n  selector: 'app-quest',\n  templateUrl: './quest.component.html'\n})\n// part0 pp signOn                       ========================\n// part1a pp prep: read survey db tables ========================\n// part1b pp prep: fancy array match     ========================\n// part2 qna session                     ========================\n// part3 ww wrap up                      ========================\nexport class QuestComponent implements OnInit {\n  constructor() {}\n  @HostListener('document:keydown', ['$event']) \n  onKeydownHandler(event: KeyboardEvent) {\n    if ( event.ctrlKey  &&  event.shiftKey && event.altKey)  { \n      this.ctrlShiftAltWasHit() \n    } // end if\n    if ( event.key=='Enter' ) { \n      this.enterKeyWasHit() \n    } // end if\n  } // end onKeydownHandler\n  faunaOrSupabase = 'fauna' // default\n  debugLvl = '?' // read queryString, set to 1 or 2 to debug.\n  cust = '?'\n  qid = '?'\n  promo = '?'\n  qUserId = '?'\n  priorQ = '?'\n  hisAns = '0'\n  hisAnsPoints = 0\n  aqx = 0 // active question index\n  curQuestTxt = ''\n  curPreQuest = ''\n  curQuestNbr = ''\n  curAca = []   //aca is Answer Choice Array.  One aca per question.\n  curAcaFrame = [] //text above answer choices, like never,sometimes,always\n  // qtDbDataObj: object = {}\n  allQuestions = []\n  activeQuestions = []\n  showQuestHtml = false\n  showAnswerGroupHtml = false \n  showDoneHtml = false\n  showDiagHtml = false\n  showSignHtml = true\n  todaysDate = new Date().toJSON().split(\"T\")[0] + \"T00:00:00\"\n  dateTimeNow = new Date().toJSON().split(\".\")[0] + \"Z\"\n  userObj = {}\n  // answerObj:object = {}\n  answerObj = {}\n  // accumObj: object = {}\n  accumObj = {}\n  // scoreObj: object = {}\n  // ruleObj: object = {}\n  accumArray = []\n  timeGap = 0\n  answerStartTime = performance.now()\n  answerEndTime = performance.now()\n  answerClickedCnt = 0\n  answerArray = []\n  qnaRound = 0\n  rulesArray = []\n  msg1 = ' '\n  firstNameInput = ''\n  lastNameInput = ''\n  phoneInput = ''\n  userFoundInDb = false\n  // pastAnswers = []\n  showDiagButHtml = false  // turn on with ctrl shift alt\n  questHasLinBrk = false // questions with line breaks hit different html\n  groupArray = []\n  scoreDiagArray = []\n  // readScoreProm   = new Promise<string>((res, rej) => {})\n  // addScoreProm  = new Promise<string>((res, rej) => {})\n  // chgScoreProm = new Promise<string>((res, rej) => {})\n  // writeAnswerProm = new Promise<string>((res4, rej4) => {})\n  // unresolvedProm = new Promise<string>((resu, reju) => {})\n  surveyName = ''\n  surveyIcode = ''\n  querystringIcode = ''\n  answerArrayStoredToDb = []\n  accumIx = 0\n  diagMainAnsweredCnt = 0\n  diagMainNotAnsweredCnt = 0\n  pastAnswerCount = 0\n  diagMsgArray = []\n  diagMsgObj = {}\n  supaFldsCustQid = {}\n  supaFldsCustQidUser = {}\n  supaFldsCustQidUserAccum = {}\n  // supaKeyFlds = {}\n  supaEtlEnabled = false\n  supaArray = []\n  faunaData = {}\n  faunaArray = []\n  // participantFoundYn = 'n'\n  surveyArray = []\n  participantArray = []\n  scoresArray = []\n\n  // may 2021. need to figure out date time for all db files.\n  // as of may 2021, we set answers and scores with 00:00 time.\n  // but user db has the real latest time, so ya can see reality.\n  // so, the user db duznt match answer/scores. but that seems ok.\n\n  // when done building allQuestions array,\n  // and done building pastAnswers array,\n  // and before asking any questions,\n  // we mark those recs in allQuestions array \n  // that have been answered already.\n  // later, when choosing a smaller set of questions,\n  // further filter by only those questions no-yet-answered.\n\n  // score recs are useful to the admin, after the participant finishes.\n  // score recs are not used in this qna session.\n  // how to write a score rec:\n  // at the start of the test, \n  // when building a list of accumulators for all questions,\n  // write a question count total for each accumulator.\n  // this is how many question/answers will eventually add to the accumulator.\n  // later, during the qna, when adding points to an accumulator, \n  // keep track of how many questions were answered for this accumulator.\n  // when the questions answered = the question count total,\n  //  ** aha moment **  time to write a score rec.\n\n  async ngOnInit() {\n    this.setQueryStringParms()\n    this.faunaOrSupabase = await getEnvVars.getFaunaOrSupabase()\n    this.logFun('fauna or supabase: ') \n    this.logFun(this.faunaOrSupabase)\n\n    this.supaFldsCustQid =   {\n      \"cust\"    : this.cust,\n      \"qid\"     :  this.qid\n    }\n\n    if (this.cust>'' && this.qid> '') {\n      this.msg1 = 'finding your survey...'\n      if (this.faunaOrSupabase == 'fauna'){\n        this.surveyArray = await this.launchFaunaReadSurvey()   } // end if fauna\n      if (this.faunaOrSupabase == 'supabase'){\n        this.surveyArray = await this.launchReadSupabase('qtSurveys',this.supaFldsCustQid) \n      } // end if supabase\n\n      this.logFun('142 surveyArray:')\n      this.logFun(this.surveyArray)\n      if (this.surveyArray.length > 0 ) {\n        this.surveyName = this.surveyArray[0].surveyName\n        this.surveyIcode = this.surveyArray[0].icode\n      }\n      \n    } // end if cust and qid > blank\n    this.msg1 = 'Welcome. Please sign in to start the Qna.'\n  } // end ngOnInit\n  \n  setQueryStringParms(){\n    this.logFun('pp1 running setQueryStringParms ')\n    // Dec2021 need promo programming.\n    let locSearchResult = new URLSearchParams(location.search)\n    let locSearchResultCust  = locSearchResult.get('cust')\n    let locSearchResultQid   = locSearchResult.get('qid')\n    let locSearchResultIcode = locSearchResult.get('icode')\n    let locSearchResultPromo = locSearchResult.get('promo')\n    let locSearchResultDebugLvl = locSearchResult.get('debugLvl')\n    let locSearchResultPriorQ = locSearchResult.get('priorQ')\n    if (locSearchResultCust != null) {\n      this.cust = locSearchResultCust\n    }\n    if (locSearchResultQid != null) {\n      this.qid = locSearchResultQid\n    }\n    if (locSearchResultPromo != null) {\n      this.logFun('131 setting promo:')\n      this.promo = locSearchResultPromo\n      this.logFun(this.promo)\n    }\n    if (locSearchResultIcode != null) {\n      this.logFun('136 setting icode:')\n      this.querystringIcode = locSearchResultIcode\n      this.logFun(this.querystringIcode)\n    }\n\n    if (locSearchResultDebugLvl != null) {\n      this.logFun('143 setting debugLvl:')\n      this.debugLvl = locSearchResultDebugLvl\n      this.logFun(this.debugLvl)\n    }\n\n    if (locSearchResultPriorQ != null) {\n      this.logFun('147 setting priorQ:')\n      this.priorQ = locSearchResultPriorQ\n      this.logFun(this.priorQ)\n    }\n\n    // when no querystring, set defaults:\n    if(this.cust == '?'){this.cust = '2'} // demo survey is 2,1\n    if(this.qid == '?'){this.qid = '1'}\n    if(this.promo == '?'){this.promo = 'none'}\n    if(this.debugLvl == '?'){this.debugLvl = '0'}\n  } // end setQueryStringParms\n\n  // part0 sign on ===========================================\n\n  async doSign(){ // user clicked go button onscreen or hit enter\n    this.logFun('running doSign ')\n    this.validateSignOnFields()\n    if (this.msg1 == 'ok') {\n      // signon fields are ok.\n      this.supaFldsCustQidUser = {\n        \"cust\"    : this.cust,\n        \"qid\"     :  this.qid,\n        \"qUserId\" : this.qUserId\n      } // end set supaFlds\n      await this.checkUser()\n      if ( this.userObj['status'] != 'done'){\n        this.doSurvey() \n      } // end if\n      if ( this.userObj['status'] == 'done'){\n        this.finalize() // he already finished the survey.\n      } // end if\n    } // end if\n  } // end doSign\n\n  validateSignOnFields(){\n    this.logFun('running validateSignOnFields')\n    this.msg1 = ''\n    if (this.phoneInput.length < 4){this.msg1='Please enter a phone number.'}\n    if (this.lastNameInput.length < 1){this.msg1='Please enter your last name.'}\n    if (this.firstNameInput.length < 1){this.msg1='Please enter your first name.'}\n    if ( this.surveyIcode > '' \n    && this.querystringIcode != this.surveyIcode\n   //&& this.cust !='2' && this.qid !='1'){ // qnc demo is 2,1. \n    && this.cust+this.qid !='21'){ // qnc demo is 2,1. \n      this.msg1 = 'Your email invitation link is invalid or expired.'\n      + ' To start this Qna, please follow the link from your email.'\n    }\n    if (this.msg1.length == 0){\n      this.msg1 = 'ok'\n      this.qUserId = this.firstNameInput.trim()\n      + this.lastNameInput.trim() \n      + this.phoneInput.trim() \n      this.showSignHtml = false\n    }\n  } // end validateSignOn\n\n  firstNameChg(firstNameParmIn){\n    this.logFun('running firstNameChg')\n    this.logFun(firstNameParmIn)\n   // this.firstNameInput = \n   //   ev.target.value[0].toUpperCase() + ev.target.value.substring(1)\n   this.firstNameInput = \n     firstNameParmIn[0].toUpperCase() + firstNameParmIn.substring(1)\n  } // end firstNameChg\n\n  lastNameChg(lastNameParmIn){\n    // this.lastNameInput = \n    //   ev.target.value[0].toUpperCase() + ev.target.value.substring(1)\n    this.lastNameInput = \n      lastNameParmIn[0].toUpperCase() + lastNameParmIn.substring(1)\n  } // end lastNameChg\n\n  phoneChg(phoneParmIn){\n    // this.phoneInput = ev.target.value \n    this.phoneInput = phoneParmIn \n  } // end phoneChg\n\n  buildUserObj(dbUserObj){ // changes  only. adds use buildNewUserObj.\n    this.logFun('202 running buildUserObj' )\n      this.userObj =\n      {\n        \"cust\": this.cust,\n        \"qid\": this.qid,\n        \"qUserId\": this.qUserId,\n        \"firstName\": this.firstNameInput,\n        \"lastName\": this.lastNameInput,\n        \"phone\": this.phoneInput,\n        \"userDateTime\":  dbUserObj.userDateTime,\n        \"status\": dbUserObj.status,\n        \"priorQ\": dbUserObj.priorQ,\n        \"answerCnt\" : dbUserObj.answerCnt\n        // \"icode\": this.surveyIcode,\n        // \"promo\": this.promo\n      } // end obj\n      this.logFun('247 answer cnt:')\n      this.logFun(this.userObj['answerCnt'])\n  } // end buildUserObj\n\n  buildNewUserObj(){\n    this.logFun('running buildNewUserObj')\n    this.userObj =\n    {\n      \"cust\": this.cust,\n      \"qid\": this.qid,\n      \"qUserId\": this.qUserId,\n      \"firstName\": this.firstNameInput,\n      \"lastName\": this.lastNameInput,\n      \"phone\": this.phoneInput,\n      \"userDateTime\": this.dateTimeNow,\n      \"status\": \"active\",\n      \"priorQ\": this.priorQ, \n      \"answerCnt\" : \"0\",\n      \"icode\": this.surveyIcode,\n      \"promo\": this.promo\n    }\n  } // end buildNewUserObj\n  \n  async checkUser() {\n    this.logFun('running checkUser')\n    this.msg1 =  \"let's look you up, \" + this.firstNameInput + ' ...'\n    if (this.faunaOrSupabase == 'fauna') {\n      this.participantArray = await this.launchFaunaReadParticipant() } \n    if (this.faunaOrSupabase == 'supabase') {\n      this.participantArray = await this.launchReadSupabase('qtUsers',this.supaFldsCustQidUser)\n    } // end if == supabase \n\n    if (this.participantArray.length > 0 ){\n      this.buildUserObj(this.participantArray[0])\n      if ( this.userObj['status'] != 'done') {\n        Object.assign(this.userObj,{userDateTime: this.dateTimeNow })\n        if (this.faunaOrSupabase == 'fauna') {\n          await this.launchFaunaChgParticipant(this.userObj,'from readParticipant')\n        } // end if fauna\n        if (this.faunaOrSupabase == 'supabase') {\n          Object.assign(this.userObj,{id: this.participantArray[0].id }) \n          await this.launchChgSupabase('qtUsers',this.userObj)\n        } // end if fauna\n        this.msg1 = 'welcome back, ' + this.firstNameInput + '.'\n      } // end if status not done\n    } // end if participantArray len > 0\n\n    if (this.participantArray.length == 0 ){\n      this.msg1 = 'adding you as a new user...'\n      this.buildNewUserObj()\n      if (this.faunaOrSupabase == 'fauna') {\n        this.participantArray = await this.launchFaunaAddParticipant() }\n      if (this.faunaOrSupabase == 'supabase') {\n        this.participantArray = await this.launchAddSupabase('qtUsers',this.userObj)} // end if supabase\n    } // end if participant len\n    this.logFun('done with checkUser')\n  } // end checkUser\n\n  // end part0 participant sign on ========================\n\n  // part1a prep: read survey db tables ========================\n  //   read questions, rules, groups, pastAnswers into arrays\n\n  // part1b prep: fancy array match     ========================\n  // part2 qNa session                  ========================\n  \n  async doSurvey(){\n    this.logFun('running doSurvey')\n    this.msg1 = 'Starting Qna for ' \n    + this.firstNameInput + ' ' + this.lastNameInput \n    + '.'\n    this.showSignHtml = false\n\n    if (this.participantArray.length > 0){ \n      // if user found, read past answers\n      if (this.faunaOrSupabase == 'fauna') { \n        this.answerArray =  await this.launchFaunaReadPastAnswers() }\n      if (this.faunaOrSupabase == 'supabase') { \n        this.answerArray = await this.launchReadSupabase('qtAnswers',this.supaFldsCustQidUser)}\n    } // end if \n    if (this.faunaOrSupabase == 'fauna') { \n      this.groupArray = await this.launchFaunaReadGroups() }\n    if (this.faunaOrSupabase == 'supabase') { \n      this.groupArray = await this.launchReadSupabase('qtGroups',this.supaFldsCustQid) }\n    this.setGroups()\n    this.sortListOfGroups()\n    if (this.faunaOrSupabase == 'fauna') { \n      this.allQuestions  = await this.launchFaunaReadQuestions() }\n    if (this.faunaOrSupabase == 'supabase') { \n      this.allQuestions = await this.launchReadSupabase('qtQuestions',this.supaFldsCustQid) }\n    this.setQuestions()\n    this.buildListOfAccumsFromAllQuestions()\n    this.matchAllQuestionsToAlreadyAnsweredQuestions()\n    this.setAlreadyCompletedGroups()\n    if (this.faunaOrSupabase == 'fauna') { \n      this.rulesArray = await this.launchFaunaReadRules() }\n    if (this.faunaOrSupabase == 'supabase') { \n      this.rulesArray = await this.launchReadSupabase('qtRules',this.supaFldsCustQid) }\n    // this.setRules()\n    await this.calcPointsSetAccum() // set accumArray from prior answers\n    this.findGroupsWithNoRules()\n    this.findNextRoundOfActiveQuestions()\n    this.sortRoundOfActiveQuestions()\n    this.setRoundFirstActiveQuest() // sets html on. participant sees/answers questions.\n  } // end doSurvey\n\n  answerClicked(hisAnsAcaIxFromHtml) {\n    // called from html, he clicked an answer\n    this.logFun('aa278 running answerClicked ')\n    this.answerClickedCnt = this.answerClickedCnt + 1\n    this.curAca = [] // block him from answering same question too quickly\n    this.curAcaFrame = [] //text above answer choices, like never,sometimes,always\n    this.curQuestTxt = '... loading ...'\n    this.curPreQuest = ''\n    this.calcAnswerTimeGap()\n    this.storeAnswer(hisAnsAcaIxFromHtml) \n    // Selzer Dec 2022 =====================\n    // find index of allquestions where cust=x qid=x questionnbr = x\n    // replace allQuestions[x].answeredThisRound = 'y' (for end compare)\n   let pos = this.allQuestions\n   .findIndex(a => a.cust==this.cust && a.qid==this.qid && a.questNbr==this.activeQuestions[this.aqx].questNbr)\n   if (pos>-1){ \n     this.allQuestions[pos].answeredThisSession = 'y' //diagnostics\n     this.priorQ = this.allQuestions[pos].questNbr // \n   } // end if pos > -1\n    // end Dec 2022 =====================\n\n    if (this.aqx < this.activeQuestions.length - 1) { \n      this.aqx = this.aqx + 1  //increments question we are about to ask.\n      this.curQuestTxt = this.activeQuestions[this.aqx].questTxt\n      this.curPreQuest = this.activeQuestions[this.aqx].preQuest \n      this.curQuestNbr = this.activeQuestions[this.aqx].questNbr \n      this.curAca = this.activeQuestions[this.aqx].aca \n      this.curAcaFrame = this.activeQuestions[this.aqx].acaFrame\n      if (this.curQuestTxt.includes('\\n')) {\n        this.questHasLinBrk = true\n      } else {\n        this.questHasLinBrk = false\n      } // end if includes \\n\n    } else { //we are at the end of active questions\n        // set next groups and set next round of active questions:\n        this.closeOutActiveAndPrepNextQuestions()  \n        this.aqx = 0\n    } // end if this.aqx\n    this.appendToQueryString()\n  } // end answerClicked\n\n  async closeOutActiveAndPrepNextQuestions(){\n    this.logFun('qna278 running closeOutActiveAndPrepNextQuestions')\n    for (let i = 0; i < this.groupArray.length; i++) {\n      if (this.groupArray[i].statusQnA == 'active') {\n        this.logFun('closing out group:')\n        this.logFun(this.groupArray[i])\n        this.groupArray[i]['statusQnA'] = 'done'\n      } // end if\n    } // end for  close out groups\n    await this.calcPointsSetAccum()\n    //this.compareRulesScoresGroups(this.accumIx)\n    this.findNextRoundOfActiveQuestions()\n    this.sortRoundOfActiveQuestions()\n    this.setRoundFirstActiveQuest()\n    if (this.activeQuestions.length == 0) { // no more questions\n      this.logFun('qna278 no more questions ')\n      this.wrapUp()\n    } // end if\n  } // end closeOutActiveAndPrepNextQuestions\n\n  calcAnswerTimeGap(){\n    this.answerEndTime = performance.now()\n    let tdif = ( this.answerEndTime - this.answerStartTime ) / 1000\n    this.timeGap = Math.round(tdif)\n    this.answerStartTime = performance.now()\n  }  // end calcAnswerTimeGap\n\n  async storeAnswer(hisAnsAcaIx){\n    this.logFun('aa322 running storeAnswer ')\n    // for the recently answered question (the active question),\n    // set a point value into hisAnsPoints.\n    // he gave an answer, and we captured it into hisAnsAcaIx.\n    // for a question, aca and acaPointVals are two data-synced arrays.\n    // so we can use hisAnsAcaIx as an index to acaPointVals\n    // to determine the point value.\n    this.hisAnsPoints = \n      this.activeQuestions[this.aqx].acaPointVals[hisAnsAcaIx]\n    this.hisAns =\n      this.activeQuestions[this.aqx].aca[hisAnsAcaIx]\n      // hisAnsPoints now contains points to be added for his answer\n    this.buildAnswerObj()\n    this.answerArray.push(this.answerObj)\n    if (this.faunaOrSupabase == 'fauna') {\n      this.launchFaunaAddAnswer(this.answerObj) }\n    if (this.faunaOrSupabase == 'supabase') { \n       await this.launchAddSupabase('qtAnswers',this.answerObj) }\n    await this.calcPointsSetAccum() // this happens in mulitple spots\n    this.msg1 = this.firstNameInput + \"'s \" \n    + 'answer count: ' + this.answerClickedCnt \n    // update participant db every 5 answers\n    if (this.answerClickedCnt / 5 ==  Math.round(this.answerClickedCnt/5)){\n      Object.assign(this.userObj,{userDateTime: this.dateTimeNow })\n      Object.assign(this.userObj,{status:  'active' })\n      Object.assign(this.userObj,{priorQ: this.curQuestNbr})\n      Object.assign(this.userObj,{answerCnt: this.answerClickedCnt})\n      if (this.faunaOrSupabase == 'fauna') {\n        this.launchFaunaChgParticipant(this.userObj,'from writeAnswer') }\n      if (this.faunaOrSupabase == 'supabase') {\n        Object.assign(this.userObj,{id: this.participantArray[0].id })  // billy bug\n        this.launchChgSupabase('qtUsers',this.userObj)\n       } // end if supabase\n    } // end if ans / 5\n  } // end storeAnswer\n\n  buildAnswerObj(){\n    this.logFun('aa350 running buildAnswerObj' )\n    // let myAccum = this.activeQuestions[this.aqx].accum\n    this.logFun('493 active questions accum: ')\n    this.logFun(Array.isArray(this.activeQuestions[this.aqx].accum)) // true\n    this.logFun(this.activeQuestions[this.aqx].accum)\n\n    let myAccumArray = [] // Jul 2023 now accum is an array.\n    if (this.activeQuestions[this.aqx].accum != undefined) {\n      for (let i = 0; i < this.activeQuestions[this.aqx].accum.length; i++) {\n          myAccumArray.push(this.activeQuestions[this.aqx].accum[i])\n      }  // end for\n    } // end if\n    this.answerObj = \n    {\n      \"cust\": this.cust,\n      \"qid\": this.activeQuestions[this.aqx].qid,\n      \"questNbr\": this.activeQuestions[this.aqx].questNbr,\n      \"answerDate\": this.todaysDate,\n      \"qUserId\": this.qUserId,\n      \"answer\": this.hisAns,\n      \"answerPoints\": this.hisAnsPoints,\n      \"timeGap\": this.timeGap,\n      \"accum\" : myAccumArray, // June 2023 accum is now an array.\n      'addPointsStatus' : 'pending', \n      'questTxt' : this.activeQuestions[this.aqx].questTxt.substring(0,40)\n    } // end answerObj\n          // \"accum\" : this.activeQuestions[this.aqx].accum,\n\n        // when building an answer rec, we copy-in the accum array \n        // from the question to help later with scoring.\n        // we are NOT adding to answers.accum here,\n        // we use answers.addPointsStatus later, to add to accumArray\n        // to keep track of whether the answer points have been added yet.\n        // we store answers to the database as we go.\n  } // end buildAnswerObj\n\n  async calcPointsSetAccum(){\n    this.logFun('aa435 running calcPointsSetAccum ' )\n    // read answerArray, set accumArray.\n    // look at answers not-yet-added to accumArray\n    // normally, this is answers recently given,\n    // but might be answers from a prior session (participant returner)\n    // exit this paragrf with nice values in accumArray.\n      // for each answer he gave:\n      // add ansPoints to one or more accumulators,\n      // depending on which accumulators were tied to the question.\n      // look at answerArray.addPointsStatus = 'pending'\n      //                     (points not yet added))\n      this.logFun('541 answerArray:')\n      this.logFun(this.answerArray)\n      for (let i = 0; i < this.answerArray.length; i++) {\n        if (this.answerArray[i].addPointsStatus == 'pending') { \n          // answer points not added to accumArray yet\n          for (let j = 0; j < this.answerArray[i].accum.length; j++) {\n              await this.findAccumAndAddPoints(this.answerArray[i].accum[j],\n                                        this.answerArray[i].answerPoints,\n                                        this.answerArray[i].timeGap)\n          } // end for j\n          //this.answerArray[i].scoreRound  = this.qnaRound\n          this.answerArray[i].addPointsStatus  = 'done'\n        } // end if answerArray[i].addPointsStatus == pending\n      } // end for i\n      this.logFun('done with calcPointsSetAccum')\n  } // end calcPointsSetAccum\n\n  async findAccumAndAddPoints(accumParmIn,ansPointsParmIn,ansTimeGapParmIn){\n    // if(ansPointsParmIn==0){'adding zero to accum!'}\n    this.logFun('aa440 running findAccumAndAddPoints. accum: ' + accumParmIn )\n    this.logFun(ansPointsParmIn)\n    // called for one accum (from answerArray). update accumArray.\n    // find matching accumArray row.\n    let pos = 0\n    if (accumParmIn !== undefined) {  \n      pos = this.accumArray\n      .findIndex(a => a.accum.toLowerCase() == accumParmIn.toLowerCase())\n       }\n    if(pos>=0){\n      this.accumArray[pos].accumScore += ansPointsParmIn\n      this.accumArray[pos].accumQuestCnt += 1  \n      this.accumArray[pos].accumTimeGap += ansTimeGapParmIn\n      // this.logFun(this.accumArray[pos])\n      if (this.accumArray[pos].accumQuestCnt ==\n          this.accumArray[pos].accumQuestCntTot) {\n            // he answered the last question that adds to this accum.\n            // hmmm, what about returner where scores not yet upserted?\n            // this  is this a good place to compare rules to thresh.\n            this.logFun('aa455 he answered last question for this accum:'\n             + this.accumArray[pos].accum)\n            //this.logFun(this.accumArray[pos].accum)\n            this.compareRulesScoresGroups(pos)\n            this.accumArray[pos].accumNeedsDbScoreUpsert = 'y'\n            await this.readOneScoreChgOrAddOneScore(pos)\n            this.logFun('aa466 returned from readOneScoreChgOrAddOneScore' )\n            // read/write score is now running on its own thread.\n      } // end if\n    } // end if\n    // this.logFun('aa466 bottom of findAccumAndAddPoints' )\n    // this.logFun('aa462 accumArray:')\n    // this.logFun(this.accumArray)\n    this.logFun('done with findAccumAndAddPoints')\n  } // end findAccumAndAddPoints\n\n  async readOneScoreChgOrAddOneScore(i){\n    this.logFun('bb529 running readOneScoreChgOrAddOneScore')\n    let myScoreObj = this.buildScoreObj(i)\n    if (this.faunaOrSupabase == 'fauna') {\n      this.scoresArray =  await this.launchFaunaReadScore(myScoreObj)  } // end if\n    if (this.faunaOrSupabase == 'supabase') {\n      this.scoresArray =  await this.launchReadSupabase('qtScores', this.supaFldsCustQidUserAccum) }  // end if\n    if (this.scoresArray.length > 0){ //score rec found\n      this.logFun('604 score rec found.')\n      if ( this.scoresArray[0]['score'] != this.accumArray[i].accumScore )  { \n        // user answered that resulted in a change to the score.\n        // lets chg a score rec on the db.\n        if (this.faunaOrSupabase == 'fauna') {\n           await this.launchFaunaChgScore(myScoreObj) }\n        if (this.faunaOrSupabase == 'supabase') {\n          Object.assign(myScoreObj,{id: this.scoresArray[0].id }) \n          await this.launchChgSupabase('qtScores',myScoreObj)\n        } // end if supabase\n        this.accumArray[i].accumNeedsDbScoreUpsert = 'n'  \n        let sdx = this.scoreDiagArray\n        .findIndex(sda => sda.accum == this.accumArray[i].accum)\n        this.scoreDiagArray.splice(sdx,1,myScoreObj)\n      } // end if score not eq accum\n    } else { // score rec not found. lets add a score rec to the db.\n      this.logFun('620 score rec not found')\n        if (this.faunaOrSupabase == 'fauna') { \n         await this.launchFaunaAddScore(myScoreObj)  }\n        if (this.faunaOrSupabase == 'supabase') {\n          await this.launchAddSupabase('qtScores',myScoreObj) }\n        this.accumArray[i].accumNeedsDbScoreUpsert = 'n' \n        this.scoreDiagArray.push(myScoreObj)\n    } // end if scoresArray len  0\n\n  } // end readOneScoreChgOrAddOneScore\n\n  buildScoreObj(i){\n    this.logFun('bb576 running buildScoreObj for accum: '\n                + this.accumArray[i].accum)\n    let scoreObj =\n    {\n      'cust': this.cust,\n      'qid' : this.qid,\n      'qUserId' : this.qUserId,\n      'testDate': this.todaysDate,\n      'accum' : this.accumArray[i].accum,\n      'score' : this.accumArray[i].accumScore,\n      'wscore' : this.accumArray[i].accumScore,\n      'questCnt' : this.accumArray[i].accumQuestCnt,\n      'timeGap' : this.accumArray[i].accumTimeGap,\n    }\n    // this.supaFldsCustQidUserAccum = scoreObj.cust + scoreObj.qid + scoreObj.qUserId + scoreObj.accum\n    this.supaFldsCustQidUserAccum =   {\n      \"cust\"    : scoreObj.cust,\n      \"qid\"     : scoreObj.qid ,\n      \"qUserId\" : scoreObj.qUserId ,\n      \"accum\"   : scoreObj.accum\n    }\n\n    return scoreObj\n  }  // end buildScoreObj\n\n  buildDiagMsgObj(diagMsgDateTime, diagMsgParmIn){\n    //this.logFun('617 running buildDiagMsgObj' )\n    this.diagMsgObj = \n    {\n      \"cust\": this.cust,\n      \"qid\": this.qid,\n      \"qUserId\": this.qUserId,\n      \"diagMsgDateTime\": diagMsgDateTime,\n      \"diagMsg\": diagMsgParmIn\n    } // end diagMsgObj\n  } // end fun buildDiagMsgObj\n\n  matchAllQuestionsToAlreadyAnsweredQuestions(){\n    this.logFun('pp626 running matchAllQuestionsToAlreadyAnsweredQuestions ' )\n    this.logFun('count of past answers: ' + this.answerArray.length)\n    this.logFun('pp626 past answers array:')\n    this.logFun(this.answerArray)  \n    // pastAnswers questNbr\n    // if ya find a match: set allQuestions.answeredAlready to 'y'\n    let j = 0\n    for (let i = 0; i < this.answerArray.length; i++) {\n      // find question that matches this pastAnswer, by questNbr\n      j = this.allQuestions\n          .findIndex(q  => q.questNbr == this.answerArray[i].questNbr);\n      if (j > -1){  //mark this question as answered already\n        this.allQuestions[j].answeredAlready = 'y'\n      }\n    } // end for\n  } // end matchAllQuestionsToAlreadyAnsweredQuestions\n\n  setAlreadyCompletedGroups(){\n    this.logFun('pp650 running setAlreadyCompletedGroups ' )\n    this.logFun('658 allQuestion:')\n    this.logFun(this.allQuestions)\n    this.logFun('662 activeQuestions:')\n    this.logFun(this.activeQuestions)\n    // if participant is returning,\n    // he has already answered some questions.\n    // we flagged those questions already. (alreadyAnswered)\n    // now compare questions to groups.\n    // does a group have any unansweredQuestions? groupHasMoreQuestions\n    // if all questions for a group have been answered,\n    // then flag the group as done.\n    // this helps later, when we look for unanswered groups.\n    // this paragrf is driven by groupArray, reads allQuestions.\n    let groupHasMoreQuestions = false\n    for (let i = 0; i < this.groupArray.length; i++) {\n      // are there any unanswered questions for this group?\n      groupHasMoreQuestions = false\n      for (let j = 0; j < this.allQuestions.length; j++) {\n        if (this.allQuestions[j].subset.toLowerCase()\n            == this.groupArray[i].groupName.toLowerCase()){\n          if (this.allQuestions[j].answeredAlready == 'n' ){ \n            groupHasMoreQuestions = true\n            break // break out of j loop\n          }\n        } // end if\n      } // end inner for j loop\n      if (!groupHasMoreQuestions){\n        this.groupArray[i].statusQnA = 'done'\n        this.logFun(' 681 no more questions for group:')\n        this.logFun(this.groupArray[i])\n      }\n    } // end for\n    // this.logFun('pp650 bottom of setAlreadyCompletedGroups. ')\n  } // end setAlreadyCompletedGroups\n\n  findNextRoundOfActiveQuestions(){\n    this.logFun('qna686 running findNextRoundOfActiveQuestions ' )\n    this.logFun('643 groupArray:')\n    this.logFun(this.groupArray)\n    // driven by groupArray. status=pending, threshHit==y\n    this.msg1 = 'building next round of questions...'\n    this.activeQuestions.length = 0  // start fresh for the upcoming round\n    // part a:\n    // look thru groupArray for the first group seq not yet asked.\n    // group seq is a grouper-of-groups.\n    // use this group seq as a driver for the next set of groups.\n    // i mean, flag all groups (with this seq) in groupArray\n    //  with status 'active'.\n    // part b:\n    // then find questions that are in one of these newly active groups.\n    // these are the questions we want stuffed into activeQuestions.\n    // rats, we might have asked all the questions in this newly active group.\n    // then we accidentally quit the session early.\n    let gax = -1\n    gax = this.groupArray\n    .findIndex(g  => g.statusQnA == 'pending' && g.threshHit == 'y')\n    this.logFun('qna686 gax: '+ gax)\n    let myGroupSeq = '9999'\n    if (gax > -1) {\n      myGroupSeq = this.groupArray[gax].seq.toLowerCase()\n      this.logFun('qna686 myGroupSeq: ' + myGroupSeq)\n      // this.logFun(myGroupSeq)\n    }\n    for (let i = 0; i < this.groupArray.length; i++) {\n      if (this.groupArray[i].seq.toLowerCase() == myGroupSeq \n      && this.groupArray[i].threshHit == 'y'\n      && this.groupArray[i].statusQnA == 'pending') {\n        this.groupArray[i]['statusQnA'] = 'active'\n        this.logFun('715 chg stat pend to active. GroupName: ' \n         + this.groupArray[i].groupName)\n      } // end if \n    } // end for\n    let activeGroups = []\n    for (let i = 0; i < this.groupArray.length; i++) {\n      if (this.groupArray[i].statusQnA == 'active') {\n        this.logFun('qna686 pushing into activeGroups. GroupName: '\n         + this.groupArray[i].groupName)\n        activeGroups.push(this.groupArray[i].groupName.toLowerCase())\n      } // end if\n    }  // end for\n    // part b:  stuff into activeQuestions\n    this.logFun('743 active groups:')\n    this.logFun(activeGroups)\n\n    for (let i = 0; i < this.allQuestions.length; i++) {\n      if (activeGroups.includes(this.allQuestions[i].subset.toLowerCase())) {\n        if ( this.allQuestions[i].answeredAlready == 'n') {\n          this.activeQuestions.push(this.allQuestions[i])\n        } // end if\n      } // end if\n    }  // end for\n    this.qnaRound = this.qnaRound + 1 \n    this.logFun('activeQuestions:')\n    this.logFun(this.activeQuestions)\n    this.logFun('qna686 bottom of findNextRoundOfActiveQuestions')\n    // this.logFun('qna686 myGroupSeq:')\n    // this.logFun(myGroupSeq)\n  } // end findNextRoundOfActiveQuestions\n\n  sortRoundOfActiveQuestions(){\n    this.logFun('qna753 running sortRoundOfActiveQuestions ' )\n    function compareSeq(a, b) {\n      let comparison = 0;\n       if (Number(a.questSeq) && Number(b.questSeq)){  \n         // a and b are both numbers\n         if (Number(a.questSeq) > Number(b.questSeq)) {comparison=1}\n         if (Number(a.questSeq) < Number(b.questSeq)) {comparison=-1}\n       } else {\n          // a or b is alpha\n          if (a.questSeq > b.questSeq) {comparison=1}\n          if (a.questSeq < b.questSeq) {comparison=-1}\n       } // end if/else\n      return comparison\n    } // end function compareSeq\n    this.activeQuestions.sort(compareSeq)\n    // this.logFun(this.activeQuestions)\n  }  // end sortRoundOfActiveQuestions\n\n  setRoundFirstActiveQuest(){\n    this.logFun('qna773 running setRoundFirstActiveQuest ' )\n    this.msg1='starting a round of questions. '\n    this.curQuestTxt = ''\n    this.curPreQuest = ''\n    this.curAca = []\n    this.curAcaFrame = []\n    this.logFun('877 activeQuestions:')\n    this.logFun(this.activeQuestions)\n    if (this.activeQuestions.length > 0) {\n      this.showQuestHtml = true // turns on the survey.\n      this.showAnswerGroupHtml = true\n      this.curQuestTxt = this.activeQuestions[0].questTxt\n      this.curPreQuest = this.activeQuestions[0].preQuest\n      this.curAca = this.activeQuestions[0].aca\n      this.curAcaFrame = this.activeQuestions[0].acaFrame\n      if(this.curQuestTxt.includes('\\n')) {\n        this.questHasLinBrk = true\n      } else {\n        this.questHasLinBrk = false\n      } // end if includes \\n    \n    } // end if\n    if (this.activeQuestions.length == 0) { // the participant is active, but there are no questions.\n      this.finalize()\n    }\n    this.logFun('qna766 bottom of setRoundFirstActiveQuest')\n  } // end setRoundFirstActiveQuest\n\n  async wrapUp(){\n    this.logFun('ww789 running wrapUp ' )\n    //this.msg1 = 'wrapping up answers and scores...'\n    // this.showQuestHtml = false\n    // this.showAnswerGroupHtml = false\n    this.logFun('ww794 final answers in answerArray:')\n    this.logFun(this.answerArray)\n    this.logFun('ww794 final accums in accumArray:')\n    this.logFun(this.accumArray)\n    this.checkForAnyMissingScores()\n    // this.logFun('812 wrap up')\n\n    // somehow, wait for db updates to answers,scores,participants\n    // before telling him thank you.\n    // tried promises to wait for db, but promises are confusing.\n    // Promise.all([\n    //   this.readScoreProm,\n    //   this.addScoreProm,\n    //   this.chgScoreProm,\n    //   this.writeAnswerProm])\n    //   .then((allPromVals) => {\n    //})\n\n    ///=== hack to wait for db updates. wait for 3500 milliseconds.\n    this.logFun('ww start timeout wait ') \n    this.msg1 =  ' Wrapping up answers and scores... '\n      + this.answerArray.length.toString() + ' answers. '\n      + this.accumArray.filter(a=> a.accumScore>0).length.toString()\n      + ' scores.  '\n    let promise1 = new Promise((resolve, reject) => {\n      setTimeout(() => resolve(\" timeout resolve\"), 3500) // 3.5 seconds\n    })\n    let prom1var = await promise1 // wait until promise1 resolves (*)\n    this.logFun('ww end timeout wait ') \n    ///=== done waiting, now run the rest of this paragraph.\n\n    this.userObj['status']       = 'done'\n    this.userObj['userDateTime'] = this.dateTimeNow \n    this.userObj['priorQ']       = this.curQuestNbr\n    this.userObj['answerCnt']    = this.answerClickedCnt\n    if (this.faunaOrSupabase == 'fauna') {\n      this.launchFaunaChgParticipant(this.userObj,'from wrapUp') }\n    if (this.faunaOrSupabase == 'supabase') {\n      this.launchChgSupabase('qtUsers',this.userObj)\n     }\n\n    this.atEndCompareQuestionCounts()\n    this.atEndCompareAccumsAndScores()\n    this.atEndCompareAnswerCounts() \n    // this.logFun('830 diagMsgArray:')\n    // this.logFun(this.diagMsgArray) \n    this.finalize() \n  } // end wrapUp\n\n  finalize(){\n    this.logFun('running finalize')\n    this.msg1 = 'Thank you, ' + this.firstNameInput\n    + ', for taking this Qna. '\n    this.showDoneHtml = true\n    this.showQuestHtml = false\n    this.showAnswerGroupHtml = false\n  } // end finalize\n\n  checkForAnyMissingScores(){\n    this.logFun('running checkForAnyMissingScores ' )\n    // Dec 2022 Selzer. \n    // look for any scores not yet written, and write them:\n    // read accumArray, see if there are any not-yet-written scores.\n    // look for a mismatch between questions asked and total questions.\n    // these might be for questions that were never asked,\n    // cuz they are part of un-asked (never triggered) groups,\n    // yet some groups WERE asked. (there is a score > 0)\n    this.logFun('851 accumArray:')\n    this.logFun(this.accumArray)\n    for (let i=0;i<this.accumArray.length;i++){\n      if (this.accumArray[i].accumScore > 0) {\n          if (this.accumArray[i].accumQuestCnt \n              != this.accumArray[i].accumQuestCntTot ) {\n               this.logFun('854 found a not-yet-scored accumArray row.')\n               this.logFun('calling para to store this one accum: '\n               + this.accumArray[i].accum)\n               //  this.accumArray[i].accumNeedsDbScoreUpsert = 'y'\n               this.readOneScoreChgOrAddOneScore(i) \n          } // end inner if\n      } // end outer if\n    } // end for\n  } // end checkForAnyMissingScores\n\n atEndCompareAccumsAndScores(){\n    // run diagnostics at the end of the survey/assessment.\n    this.logFun('ww824 running atEndCompareAccumsAndScores')\n    this.logFun('910 accumArray:')\n    this.logFun(this.accumArray)\n    this.logFun('912 scoreDiagArray:')\n    this.logFun(this.scoreDiagArray)\n    for (let i=0;i<this.accumArray.length;i++){\n      for (let j=0; j <this.scoreDiagArray.length;j++) {\n          if( this.accumArray[i].accum == this.scoreDiagArray[j].accum){\n            this.logFun('922 scoreDiagArray[j].accum:')\n            this.logFun( this.scoreDiagArray[j].accum)\n            this.logFun('925 accumArray[i].accum:')\n            this.logFun( this.accumArray[i].accum)\n          } // end if\n      } // end for k\n    } // end for i\n  } // end atEndCompareAccumsAndScores\n\n  oldatEndCompareAccumsAndScores(){ // compares only one accum.  see new.\n    this.logFun('ww824 running atEndCompareAccumsAndScores')\n    this.logFun('912 accumArray:')\n    this.logFun(this.accumArray)\n    this.logFun('914 scoreDiagArray:')\n    this.logFun(this.scoreDiagArray)\n    // run diagnostics at the end of the survey/assessment.\n    let sdx = -1\n    for (let i=0;i<this.accumArray.length;i++){\n      // scoreDebugger array: we built that thing\n      // when we inserted & updated score recs.\n      // loop j accumArray[i].accum[j]\n      // find a match for scoreDiagArray[] == accumArray[i].accum[j]\n      sdx = this.scoreDiagArray\n      .findIndex(sda => sda.accum == this.accumArray[i].accum)\n      if (sdx==-1 && this.accumArray[i].accumQuestCnt > 0){\n        this.logFun('ww824 rats, no scoredebugger rec to match accumArray accum:')\n        this.logFun(this.accumArray[i].accum)\n      }\n      if (sdx>-1 && this.accumArray[i].accumScore != this.scoreDiagArray[sdx].score){\n        this.logFun('ww824 rats, mismatch accumArray and scoreDiagArray.')\n        this.logFun('ww824 accumArray accum: '+this.accumArray[i].accum)\n        this.logFun('ww824 accumArray accumscore: '+this.accumArray[i].accumScore)\n        this.logFun('ww824 scoreDiagArray accum: '+this.scoreDiagArray[sdx].accum)\n        this.logFun('ww824 scoreDiagArray score: '+this.scoreDiagArray[sdx].score)\n      }  // end if\n    } // end for\n\n    // compare accum question count with accum question count total:\n    for (let i=0;i<this.accumArray.length;i++){\n      if (this.accumArray[i].questCnt != this.accumArray[i].questCntTot){\n        this.logFun('ww824 rats, accum questCnt <> questCntTot')\n        this.logFun('accumArray question count:' )\n        this.logFun( this.accumArray[i].questCnt)\n        this.logFun('accumArray question count total:')\n        this.logFun( this.accumArray[i].questCnt)\n        // compare scores written to scores array?\n      } // end if\n    } // end for\n  } // end oldatEndCompareAccumsAndScores\n\n  atEndCompareAnswerCounts() {\n    this.logFun('ww824 running atEndCompareAnswerCounts')\n    this.logFun('past answers count: ' + this.pastAnswerCount)\n    this.logFun('answer clicked this session count: '+ this.answerClickedCnt )\n    this.logFun('answers captured this session count: ' + this.answerArrayStoredToDb.length)\n    // let answersThisSessionCount = \n    //   this.allQuestions.filter(a=>a.answeredThisSession == 'y').length\n\n    if (this.answerClickedCnt != this.answerArrayStoredToDb.length){\n      this.logFun('908 rats, answerCount mismatch.')\n    } // end if\n\n      let questionsNotAsked = this.allQuestions\n          .filter(a=>a.answeredAlready == 'n'\n                  && a.answeredThisSession == 'n') \n\n      this.logFun('answers stored to db this session count:' + this.answerArrayStoredToDb.length  )\n      this.logFun('questions not answered (assume not asked) count: '\n                  + questionsNotAsked.length)\n      this.logFun('924 allQuestions array: ')\n      this.logFun(this.allQuestions)\n      this.logFun('920 questions not answered (assume not asked) array: ')\n      this.logFun(questionsNotAsked)\n      this.logFun('922 answerArray:')\n      this.logFun(this.answerArray)\n      \n  } // end atEndCompareAnswerCounts\n\n  atEndCompareQuestionCounts() {\n    this.logFun('939 running atEndCompareQuestionCounts')\n  \n    // Dec 2022 group main diagnostics\n    // count  not-yet-answered questions in group 'Main'\n    // count  already-answered questions in group 'Main'\n    this.diagMainAnsweredCnt = this.allQuestions\n    .filter(a=> a.subset == 'Main'  && a.answeredThisSession == 'y')\n    .length\n    this.diagMainNotAnsweredCnt = this.allQuestions\n    .filter(a=> a.subset == 'Main'  && a.answeredThisSession != 'y')\n    .length\n\n   this.logFun('Main questions asked: ' +this.diagMainAnsweredCnt)\n   this.logFun('Main questions not asked: ' +this.diagMainNotAnsweredCnt)\n  } // end atEndCompareQuestionCounts\n   \n  setQuestions(){\n    this.logFun('pp866 running setQuestions ' )\n    for (let i = 0; i < this.allQuestions.length; i++) {\n      this.allQuestions[i].answeredAlready = 'n'\n      this.allQuestions[i].answeredThisSession = 'n'\n      // for (let j = 0; j < this.allQuestions[i].accum.length; j++) {\n      //   if (this.allQuestions[i].accum[j] != undefined\n      //   && this.allQuestions[i].accum[j].length > 0){\n      //     // don't convert to lowercase here.  \n      //     // It causes lowercase qtAnswers.acuum\n      //     // this.allQuestions[i].accum[j] = this.allQuestions[i].accum[j].toLowerCase()\n      //   } // end if accum not blank\n      // } // end for j\n    } // end for i\n  } // end setQuestions\n\n  // setRules(){\n  //   // in the rules table, accum is just a text field (not an array)\n  //   for (let i = 0; i < this.rulesArray.length; i++) {\n  //     this.rulesArray[i].accum = this.rulesArray[i].accum.toLowerCase()\n  //   }\n  // }\n\n  loadQuestionsFromDbToAllQuestions(qtDbObj){\n    this.logFun('pp866 running loadQuestionsFromDbToAllQuestions ' )\n    // input is qtDbObj from database and output allQuestions array.\n    // get here after .then of reading db,\n    // so qtDbObj is ready to use.\n    this.allQuestions.length = 0 //blank out array, then load it\n    for (let i = 0; i < qtDbObj.length; i++) {\n      this.allQuestions.push(qtDbObj[i].data)\n      this.allQuestions[i].answeredAlready = 'n'\n      this.allQuestions[i].answeredThisSession = 'n'\n      // this.allQuestions[i].subset = this.allQuestions[i].subset.toLowerCase()\n      // for(let j=0; j<this.allQuestions[i].accum.length; j++){\n      //   // this.allQuestions[i].accum[j] = this.allQuestions[i].accum[j].toLowerCase()\n      // } // end inner for\n    } // end outer for\n    // this.logFun('bottom of loadQuestionsFromDbToAllQuestions')\n    // this.logFun(this.allQuestions)\n  }  // end loadQuestionsFromDbToAllQuestions\n\n  buildListOfAccumsFromAllQuestions(){\n    this.logFun('pp885 running buildListOfAccumsFromAllQuestions ' )\n    // read all questions array, find the unique accumulators.\n    // push a newly discovered accum into accumArray.\n    let pos = -1\n    for (let i = 0; i < this.allQuestions.length; i++) {\n      // this question has an array of accumulators.\n      for (let j = 0; j < this.allQuestions[i].accum.length; j++) {\n        // find the accum in accumArray. if not found, add it.\n        pos = this.accumArray\n        .findIndex(a => a.accum.toLowerCase() \n                   == this.allQuestions[i].accum[j].toLowerCase())\n        if (pos >=0){  // add to an existing accum\n          this.accumArray[pos].accumQuestCntTot +=1\n        } else {       // append a new accum \n           this.accumObj = { \n              'accum': this.allQuestions[i].accum[j],\n              'accumScore' : 0,\n              'accumQuestCntTot' : 1,\n              'accumQuestCnt' : 0,\n              'accumTimeGap' : 0,\n              'accumScoreRound' : 0,\n              'accumNeedsDbScoreUpsert' : 'n',\n            }\n          this.accumArray.push(this.accumObj)\n        } // end if\n      } // end inner for\n    } // end outer for\n    // this.logFun('pp885 bottom of buildListOfAccumsFromAllQuestions.')\n    // this.logFun(this.accumArray)\n  } // end buildListOfAccumsFromAllQuestions\n\n  setGroups(){\n      this.logFun('running setGroups')\n      for (let j = 0; j < this.groupArray.length; j++) {\n      this.groupArray[j][ \"statusQnA\" ] = 'pending'\n      this.groupArray[j][ \"threshHit\" ] = 'n'        \n      // this.groupArray[j][ \"groupName\" ] = this.groupArray[j][ \"groupName\" ].toLowerCase()        \n      // this.groupArray[j][ \"subset\" ] = this.groupArray[j][ \"subset\" ] //.toLowerCase()        \n      } // end for loop j\n      this.logFun('1032 groupArray:')\n      this.logFun(this.groupArray)\n  } // end setGroups\n\n  sortListOfGroups(){\n    this.logFun('pp955 running sortListOfGroups ' )\n    function compareSeq(a, b) {\n      let comparison = 0;\n       if (Number(a.seq) && Number(b.seq)){  \n         // a and b are both numbers\n         if (Number(a.seq) > Number(b.seq)) {comparison=1}\n         if (Number(a.seq) < Number(b.seq)) {comparison=-1}\n       } else {\n          // a or b is alpha\n          if (a.seq > b.seq) {comparison=1}\n          if (a.seq < b.seq) {comparison=-1}\n       } // end if/else\n      //   if (Number(a.seq) > Number(b.seq)) { comparison=1 } \n      //   else { if (Number(a.seq) <  Number(b.seq)) { comparison=-1}\n      // } \n      //===\n  //     if (a.seq.toString().padStart(4,'0') \n  //     > b.seq.toString().padStart(4,'0')) {\n  //    comparison = 1;\n  //  } else if (a.seq.toString().padStart(4,'0') \n  //            < b.seq.toString().padStart(4,'0')) {\n  //    comparison = -1;\n  //  }\n      //===\n      return comparison;\n    } // end function compareSeq\n    \n    this.groupArray.sort(compareSeq)\n    this.logFun('950 sorted groupArray:')\n    this.logFun(this.groupArray)\n  } // end sortListOfGroups\n\n\n  findGroupsWithNoRules(){\n    this.logFun('pp1023 running findGroupsWithNoRules ' )\n    // this is run at the start of a qna session.\n    // look for groups that have no rule.\n    // for groups with no rule,  set group.threshHit to 'y' \n    // becuz groups without rules are the same as hitting a thresh.\n    let rax = 0\n    for (let gax = 0; gax < this.groupArray.length; gax++) {\n       rax = this.rulesArray\n       .findIndex(r => r.subset.toLowerCase() == this.groupArray[gax].groupName.toLowerCase())\n      if (rax == -1){\n        // we found no rule for this group.\n        this.logFun('1057 no rule for: '+ this.groupArray[gax].groupName.toLowerCase())\n        this.groupArray[gax].threshHit = 'y' \n      } // end if\n    }  // end for\n    this.logFun('pp1023 end of findGroupsWithNoRules. groupArray:')\n    this.logFun(this.groupArray)\n  } // end findGroupsWithNoRules\n\n  newCompareRulesScoresGroups(accumIxParmIn){\n    this.logFun('pp1046 running newCompareRulesScoresGroups ' )\n    // selzer Dec 2022 sax is now an input parm.\n    let sax = accumIxParmIn\n    for (let rax = 0; rax < this.rulesArray.length; rax++) {\n      for (let gax = 0; gax < this.groupArray.length; gax++){\n        if ( this.groupArray[gax].groupName == this.rulesArray[rax].subset){\n          this.logFun('group row and rules array row to compare:')\n          this.logFun(this.groupArray[gax])\n          this.logFun(this.rulesArray[rax])\n          this.checkThresh(rax,gax,sax)\n        } // end if group == subset\n      } // end for gax\n    } // end for rax\n\n\n  } // end newCompareRulesScoresGroups\n\n  compareRulesScoresGroups(accumIxParmIn){\n    this.logFun('pp1046 running compareRulesScoresGroups ' )\n    this.logFun(this.rulesArray)\n    let sax = accumIxParmIn\n    /// this para is driven by rulesArray, \n    /// uses accumArray, groupArray --- updates groupArray.\n    //   loop thru rules rax++  find a score for the rule(rax)\n    //   if ya got a score for the rule,\n    //    check thresh of the rule compare to score\n    //   if thresh hit\n    //    find group for this rule: 'will trigger group'  (rulesArray.subset) \n    //    and set groupArray(gax).threshHit = 'y'\n    // done loop thru all rules.\n    // dec 2022 do this just for one accum ==== accumIxParmIn.\n    // call this para only when he answered a final question for this accum.\n    for (let rax = 0; rax < this.rulesArray.length; rax++) {\n      //\n      for (let gax  =0; gax < this.groupArray.length; gax++){\n        \n      }\n      //\n\n      if (this.rulesArray[rax].accum == this.accumArray[sax].accum) { \n        let gax = -1\n        gax = this.groupArray\n        .findIndex(g => g.groupName.toLowerCase() == this.rulesArray[rax].subset.toLowerCase())\n        if (gax > -1) {\n          this.logFun('group row and rules array row to compare:')\n          this.logFun(this.groupArray[gax])\n          this.logFun(this.rulesArray[rax])\n          this.checkThresh(rax,gax,sax)\n        } // end if\n      }  // end if\n    } // end for\n    // this.logFun('pp1046 bottom of compareRulesScoresGroups.')\n  } // end compareRulesScoresGroups\n\n  checkThresh(rax,gax,sax){\n    this.logFun('1085 running checkThresh... ' )\n    // we are current on a rule,   group,  & scoreboard.\n    // check if a rule threshold is hit for this group.\n    // rax: rules array index (was set before we got here)\n    // gax: group array index (was set before we got here)\n    // sax: accum array index (was set before we got here)\n\n    if ((this.rulesArray[rax].oper == '>='\n      || this.rulesArray[rax].oper == 'greater than or equal to')\n    &&  this.accumArray[sax].accumScore >= this.rulesArray[rax].thresh) { \n      this.groupArray[gax].threshHit = 'y'\n    } // end if oper >=\n\n    if ((this.rulesArray[rax].oper == '<='\n      || this.rulesArray[rax].oper == 'less than or equal to')\n    &&  this.accumArray[sax].accumScore <= this.rulesArray[rax].thresh) { \n      this.groupArray[gax].threshHit = 'y'\n    } // end if oper <=\n\n    if ((this.rulesArray[rax].oper == '!='\n      || this.rulesArray[rax].oper == 'not equal to')\n    &&  this.accumArray[gax].accumScore != this.rulesArray[rax].thresh) { \n      this.groupArray[gax].threshHit = 'y'\n    } // end if oper !=\n\n    if ((this.rulesArray[rax].oper == '=='\n      || this.rulesArray[rax].oper == 'equal to')\n    &&  this.accumArray[sax].accumScore == this.rulesArray[rax].thresh) { \n      this.groupArray[gax].threshHit = 'y'\n    } // end if oper ==\n    \n    if ( (this.rulesArray[rax].oper == '=' \n      || this.rulesArray[rax].oper == 'equal to')\n    &&  this.accumArray[sax].accumScore == this.rulesArray[rax].thresh) { \n      this.groupArray[gax].threshHit = 'y'\n    } // end if oper =\n\n    if (this.rulesArray[rax].oper == '<'\n    ||  this.rulesArray[rax].oper == 'less than') {\n      if  (this.accumArray[sax].accumScore < this.rulesArray[rax].thresh) {\n        this.groupArray[gax].threshHit = 'y'  \n        this.logFun('1140 less than threshHit..*-* ')\n        this.logFun('rulesArray[rax].accum:')\n        this.logFun(this.rulesArray[rax].accum)\n        this.logFun('rulesArray[rax].subset:')\n        this.logFun(this.rulesArray[rax].subset)  \n      } // end inner if \n    } // end outer if\n\n    if ((this.rulesArray[rax].oper == '>'\n      || this.rulesArray[rax].oper == 'greater than')\n    &&  this.accumArray[sax].accumScore > this.rulesArray[rax].thresh) { \n      this.groupArray[gax].threshHit = 'y'\n      this.logFun('threshHit greater than *-*')\n      this.logFun('rulesArray[rax].accum:')\n      this.logFun(this.rulesArray[rax].accum)\n      this.logFun('rulesArray[rax].subset:')\n      this.logFun(this.rulesArray[rax].subset)\n    } // end if oper >\n  } // end checkThresh\n\n  //////////////////////  database launches read/chg/add ///////\n\n  async launchFaunaReadSurvey(){ \n    this.logFun('1149 running launchFaunaReadSurvey ' )\n    let faunaDataArray = []\n    let rawFauna = await apiFauna.qtReadSurvey(this.cust,this.qid)\n    .catch(() => {  // api returned an error \n      this.msg1 = 'error reading survey.'\n      this.logFun('1165 apiFauna.readSurvey error.'+this.cust+this.qid)\n     })\n    for (let i = 0; i < rawFauna.length; i++) {\n      faunaDataArray.push( rawFauna[i].data )\n    } // end for\n    this.logFun('fauna read survey fauna array:')\n    this.logFun(faunaDataArray)  \n    this.logFun('1196 read survey faunaDataArray is Array true/false:')\n    this.logFun(Array.isArray(faunaDataArray)) // true\n    // this results in one entry in an array.\n  return faunaDataArray\n  } // end readFaunaSurvey\n\n  async launchFaunaReadParticipant(){\n    this.logFun('aa1141 running launchFaunaReadParticipant')\n    this.msg1 = 'reading participant...'\n    let faunaDataArray = []\n    let rawFauna = await apiFauna.qtReadUser(this.cust,this.qid,this.qUserId)\n    this.logFun(' read participant rawFauna:')\n    this.logFun(rawFauna)  \n    this.logFun('1208 read participant rawFauna is Array true/false:')\n    this.logFun(Array.isArray(rawFauna)) // true\n    for (let i = 0; i < rawFauna.length; i++) {\n      faunaDataArray.push( rawFauna[i].data )\n    } // end for\n    return faunaDataArray\n  } // end launchFaunaReadParticipant\n\n  async launchFaunaChgParticipant(userObjParmIn,fromWhere){\n    this.logFun('594 running launchFaunaChgParticipant')\n    this.logFun(userObjParmIn)\n    //this.msg1 = 'updating participant...'\n    this.faunaData = await apiFauna.qtUpdateParticipant(userObjParmIn)\n    .catch(() => {\n      this.msg1 = 'error updating participant.'\n      this.logFun('601 launchFaunaChgParticipant error. userObjParmIn:')\n      this.logFun(userObjParmIn)\n     })\n     this.logFun('fauna chg participant faunaData:')\n     this.logFun(this.faunaData)  \n     this.logFun('qtUpdateParticipant faunaData is Array true/false:')\n     this.logFun(Array.isArray(this.faunaData)) // false\n  } // end launchFaunaChgParticipant\n  \n  async launchFaunaAddParticipant() {\n    this.logFun('1165 running launchFaunaAddParticipant ')\n    let rawFauna = await apiFauna.qtAddParticipant(this.userObj)\n    .catch(() => {  // api returned an error \n      this.msg1 = 'error adding participant.'\n      this.logFun('1165 apiFauna.qtAddParticipant error. userObj:')\n      this.logFun(this.userObj)\n    }) //end catch\n    this.logFun('fauna add participant rawFauna:')\n    this.logFun(rawFauna)  \n    this.logFun('qtAddParticipant rawFauna is Array true/false:')\n    this.logFun(Array.isArray(rawFauna)) // false  \n    let myNewArray = []\n    myNewArray.push (rawFauna)\n    return myNewArray // result is one participant stuffed into an array.\n  } // end launchFaunaAddParticipant\n  \n  async launchFaunaReadPastAnswers() {\n    this.logFun('pp387 running launchFaunaReadPastAnswers ' ) \n    this.msg1 = 'reading past answers...'\n    let rawFauna = await apiFauna.qtReadAnswers(this.cust, this.qid, this.qUserId)\n    .catch(() => {  // apiFauna.qtReadAnswers returned an error \n      this.msg1 = 'error reading answers.'\n      this.logFun('apiFauna.qtReadAnswers error. cust & qid & user ')\n      this.logFun(this.cust+ ' '+ this.qid+' '+this.qUserId)\n     })\n     this.logFun('1273  read answers rawFauna:')\n     this.logFun(rawFauna)\n     this.logFun('qtReadAnswers rawFauna is Array true/false:')\n     this.logFun(Array.isArray(rawFauna)) // true\n     let faunaDataArray = []\n     for (let i = 0; i < rawFauna.length; i++) {\n       faunaDataArray.push( rawFauna[i].data )\n     } // end for\n     return faunaDataArray\n  } // end launchFaunaReadPastAnswers\n\n  async launchFaunaReadGroups() {\n    this.logFun('pp918 running launchFaunaReadGroups ' )\n    this.msg1 = 'reading question groups...'\n    let rawFauna = await apiFauna.qtReadGroups(this.cust,this.qid)\n    .catch(() => {  // apiFauna.qtReadGroups returned an error \n      this.msg1 = '1122 error reading groups.'\n      this.logFun('apiFauna.qtReadGroups error.')\n      this.logFun('cust & qid: '+this.cust+this.qid)\n     })\n    this.logFun('1147 read group rawFauna:')\n    this.logFun(rawFauna)\n    this.logFun('qtReadGroups rawFauna is array true/false:')\n    this.logFun(Array.isArray(rawFauna)) // true\n    let faunaDataArray = []\n    for (let i = 0; i < rawFauna.length; i++) {\n      faunaDataArray.push( rawFauna[i].data )\n    } // end for\n    return faunaDataArray\n  } // end launchFaunaReadGroups\n\n  async launchFaunaReadRules(){\n    this.logFun('pp986 running launchFaunaReadRules ' )\n    this.msg1 = 'reading rules...'\n    let rawFauna = await apiFauna.qtReadRules(this.cust,this.qid)\n     .catch(() => {  // apiFauna.qtReadRules returned an error \n       this.msg1 = 'error reading rules.'\n       this.logFun('apiFauna.qtReadRules error. cust and qid:')\n       this.logFun(this.cust+this.qid)\n      })\n    this.logFun('rawFauna:')\n    this.logFun(rawFauna)\n    this.logFun('qtReadRules rawFauna is an array true/false:') //  \n    this.logFun(Array.isArray(rawFauna)) // true\n    let faunaDataArray = []\n    for (let i = 0; i < rawFauna.length; i++) {\n        faunaDataArray.push( rawFauna[i].data )\n    } // end for\n    this.logFun('1319 fauna rules array:')\n    this.logFun(faunaDataArray)\n    this.logFun(' done with launchFaunaReadRules')\n    return faunaDataArray\n  } // end launchFaunaReadRules\n\n  async launchFaunaReadQuestions () {\n    this.logFun('pp846 running launchFaunaReadQuestions')\n    this.msg1 = 'reading questions...'\n    let rawFauna = await apiFauna.qtReadQuestions(this.cust,this.qid)\n     .catch(() => {  // apiFauna.qtReadQuestions returned an error \n       this.msg1 = 'error reading questions.'\n       this.logFun('apiFauna.qtReadQuestions error. cust and qid:' )\n       this.logFun(this.cust + this.qid)\n     })\n     this.logFun('1317 qtReadQuestions rawFauna:')\n     this.logFun(rawFauna)\n     this.logFun('qtReadQuestions rawFauna is array true/false:')\n     this.logFun(Array.isArray(rawFauna)) // true\n     let faunaDataArray = []\n     for (let i = 0; i < rawFauna.length; i++) {\n       faunaDataArray.push( rawFauna[i].data )\n     } // end for\n     this.logFun(faunaDataArray)\n     return faunaDataArray\n   } // end launchFaunaReadQuestions\n\n  async launchFaunaReadScore(scoreObjParmIn){\n  this.logFun('bb636 running launchFaunaReadScore' )\n  let rawFauna =   \n    await apiFauna.qtReadScore(this.cust,this.qid,this.qUserId,scoreObjParmIn['accum'])\n    .catch(() => {  // apiFauna.qtReadScore returned an error \n      this.logFun('apiFauna.qtReadScore error.')\n      this.logFun('cust & qid: & user & scoreboardName:')\n      this.logFun(this.cust+this.qid+this.qUserId+scoreObjParmIn['accum'])\n      }) // end \n    this.logFun('rawFauna:')\n    this.logFun(rawFauna)\n    this.logFun('1358  qtReadScore array test true/false')\n    this.logFun(Array.isArray(rawFauna)) // true\n    let faunaDataArray = []\n    for (let i = 0; i < rawFauna.length; i++) {\n      faunaDataArray.push( rawFauna[i].data )\n     } // end for\n   this.logFun('bb578 bottom of launchFaunaReadScore' )\n   return faunaDataArray\n  } // end launchFaunaReadScore\n\n  async launchFaunaAddScore(scoreObjParmIn){\n    this.logFun('bb573 running launchFaunaAddScore ')\n    // this.logFun(scoreObjParmIn.accum)\n  // this.logFun(scoreObjParmIn.score)\n  //this.msg1 = 'writing score...'\n  // write to db table qtScores\n    let faunaRtnObj = await apiFauna.qtWriteScore(scoreObjParmIn)\n     .catch(() => {\n       this.msg1 = 'error writing score.'\n       this.logFun('bb573 qtWriteScore error. scoreObjParmIn:' )\n       this.logFun(scoreObjParmIn)\n     })\n    // console.log('608 fauna array test:',Array.isArray(faunaRtnObj)) // false\n    this.logFun('faunaRtnObj')\n    this.logFun(faunaRtnObj)\n    return faunaRtnObj\n  } // end launchFaunaAddScore\n\n  async launchFaunaChgScore(scoreObjParmIn){\n  this.logFun('bb588 running launchFaunaChgScore ' )\n  this.msg1 = 'updating score...'\n  // this.logFun('bb588 scoreObjParmIn: =====')\n  // this.logFun(scoreObjParmIn)\n  let faunaRtnObj = await apiFauna.qtUpdateScore(scoreObjParmIn)\n  .catch(() => {\n    this.msg1 = 'error updating score.'\n    this.logFun('qtUpdateScore error. ' )\n    this.logFun(faunaRtnObj)\n  }) // end catch\n  // console.log('628 fauna array test:',Array.isArray(faunaRtnObj)) // false\n  this.logFun('faunaRtnObj')\n  this.logFun(faunaRtnObj)\n\n  return faunaRtnObj\n  }  // end launchFaunaChgScore\n\n  async launchFaunaAddAnswer(answerObjParm){\n    this.logFun('aa354 running launchFaunaAddAnswer' )\n    // writing to the db is helpful for later admin retrieval,\n    // but for now, only the answerArray is useful.\n    this.msg1 = 'saving answer...'\n    this.faunaData = await apiFauna.qtWriteAnswer(answerObjParm)\n     .catch(() => {\n        this.msg1='error writing answer.'\n        this.logFun('aa354 qtWriteAnswer error. answerObj:')\n        this.logFun(answerObjParm)\n        this.debugAnswerError(answerObjParm)\n      }) // end catch\n      // this.qtDbDataObj = faunaData.data\n      this.answerArrayStoredToDb.push(answerObjParm)\n  } // end launchFaunaAddAnswer\n  \n  async launchReadSupabase(tbl,flds){  \n    this.logFun('aa354 running launchReadSupabase' )\n    this.logFun('tbl:')\n    this.logFun(tbl)\n    let supaRes = await apiSupabase.readSupabase(tbl,flds)\n    this.supaArray = supaRes.supabaseData\n    if (this.supaArray === null) {this.supaArray = []}\n    this.logFun('1445 supaArray from launchReadSupabase:')\n    this.logFun(this.supaArray)\n    return this.supaArray\n  } // end launchReadSupabase\n\n  async launchAddSupabase(tbl,flds){\n    this.logFun('aa354 running launchAddSupabase' )\n    let supaRes = await apiSupabase.addSupabase(tbl,flds)\n    this.supaArray = supaRes.supabaseData\n    if (this.supaArray === null) {this.supaArray = []}\n    this.logFun('1455 supaArray from launchAddSupabase:')\n    this.logFun(this.supaArray)\n    if (this.supaArray.length > 0){\n      if (tbl == 'qtAnswers'){\n        this.answerArrayStoredToDb.push(flds)\n      } // end if qtanswers\n    } // end if supaArray len\n    return this.supaArray\n  } // end launchAddSupabase\n\n  async launchChgSupabase(tbl,flds){\n    this.logFun('aa354 running launchChgSupabase' )\n    let supaRes = await apiSupabase.chgSupabase(tbl,flds)\n    this.supaArray = supaRes.supabaseData\n    if (this.supaArray === null) {this.supaArray = []}\n    return this.supaArray\n  } // end launchChgSupabase\n\n ////////////////////// end database launches ///////\n\n debugAnswerError(answerObjParm){\n    this.logFun('1204 running debugAnswerError. ')\n  } // end debugAnswerError\n\n  appendToQueryString(){\n    this.logFun('1329 running appendToQueryString')\n    let loco = new URLSearchParams(location.search)\n    // loco.set('topic', 'main')\n    loco.set('priorQ', this.priorQ)\n    this.logFun('loco' + loco.toString())\n    window.history.replaceState(\n      {}, 'unused', `${location.pathname}?${loco}`)\n    // billyy now try setting history to the prior question\n    let myNewUrl = new URL(window.location.toString())\n    window.history.pushState({}, '', myNewUrl)\n    this.logFun('myNewUrl '+ myNewUrl)\n    // pushstate might work, but now ya gotta find that priorQ.\n    // billyy\n  }\n\n  ctrlShiftAltWasHit(){\n    this.logFun('running ctrlShiftAltWasHit ')\n    // toggle diagnostic button on off\n    if (this.showDiagButHtml){\n      this.showDiagButHtml = false  // ctrl shift alt\n    } else {\n      this.showDiagButHtml = true  // ctrl shift alt\n    }\n  } // end ctrlShiftAltWasHit\n\n  enterKeyWasHit(){\n    // he hit enter instead of go button. same thing.\n    this.logFun('running enterKeyWasHit')\n    if (this.showSignHtml) { \n      this.doSign() \n    } // end if\n  } // end enterKeyWasHit\n\n  setScrDiagOnOff(){\n    this.logFun('running setScrDiagOnOff ' )\n    // as of Spring 2021, control diagnostics with ctrl+alt+shift\n    if (this.showDiagHtml == true) {\n      this.showDiagHtml = false\n      this.msg1 = 'diagnostics turned off.'\n    }else{\n      this.showDiagHtml = true\n      this.msg1 = 'diagnostics turned on.'\n    } // end if\n  } // end setScrDiagOnOff\n\n  logFun(logParmIn1){\n    // use this instead of console.log and console.table.\n    // logs only if debugLvl not equal 0.\n    if (this.debugLvl=='0'){ return }\n    let nd = new Date() //format datetime to 2022/12/31 01:31:32.555\n    let a = nd.toLocaleDateString('zh-CN')\n    let b = nd.getHours().toString().padStart(2,'0')\n    let c = nd.getMinutes().toString().padStart(2,'0')\n    let d = nd.getSeconds().toString().padStart(2,'0')\n    let e = nd.getMilliseconds().toString().padStart(3, '0') \n    let myDateTime = a+' '+b+':'+c+':'+d+'.'+e\n    \n    if (typeof logParmIn1  == 'object') {\n      console.table(logParmIn1 )\n      console.log('💫',myDateTime)\n      //💫 Dizzy https://emojipedia.org/emoji-1.0/\n    } else {\n      console.log(myDateTime, '💠', logParmIn1 )\n      //💠 Diamond with a Dot\n      this.buildDiagMsgObj(myDateTime , logParmIn1)\n      this.diagMsgArray.push(this.diagMsgObj)\n      // maybe someday write to fauna log    \n      // this.writeDiagMsgToDb(this.diagMsgObj) \n    } // end if \n} // end logfun\n\n} // end class QuestComponent\n\n// notes\n// how duz  .then stuff work? by chaining confusion.\n// The first argument of .then \n// is a function that runs when the promise is resolved, \n// and receives the result.\n// api is promise based,\n// so after an api call, pgm logic continues at .then\n// dont try to run paragrafs sequentially when you call an api paragrf.\n// gets confusing when we have multiple api calls in various paragrfs.\n// there are multiple .then parts running at the same time. ouch.\n// like, we dont wait for the past answer fetch to complete,\n// before we read the list of questions.\n//   We like how the survey continues asking questions even though\n// we store an answer async, but when we run out of questions\n// we cant do the wrap up until the last answer is stored.\n// ( cuz it makes the screen messages out-of-order)\n// ( cuz it wrecks the final write to user db table)\n/////\n//what i think async await does:::::::::::::::::::::\n//caller-function calls my-async-function\n//code within my-async-function will halt at await, but with a twist. \n//the halt is only for this func, until the promise is resolved.\n//the main pgm (the caller) is SNEAKY and will continue on, \n//immediately running the next lines of code in caller-function.\n//once the promise is resolved, my-async-function will continue after await.\n////////////////////////////////////////////////////////////////\n// TypeScript is not a first-class citizen \n// - I'm learning Angular and, as a byproduct, \n// I'm learning enough TypeScript to get the job done. \n// Unfortunately, this means that I sometimes spend \n// lotsa time just trying to satisfy the type-checker. \n//// my way to test for numeric:\n// if (Number('hello'))  {alert(115)} \n// if (Number(117))      {alert(117)}","\n\n\n<div class='mr-3 ml-3 mt-3 mb-3'>\n  <span class='tag is-dark is-small' \n    *ngIf='msg1.length > 0'>\n    {{msg1}} \n  </span>\n  &nbsp;\n  <!-- <button \n    *ngIf='showDiagHtml'\n    class= 'is-link is-small is-outlined'\n    (click)='launchFirestoreReadSurveys()'\n  >\n  firestoreReadSurvey</button> -->\n</div>\n \n<section *ngIf=\"showSignHtml\" class='mr-2 ml-3 mt-3' >\n  <div class='subtitle mt-3 mb-3'>{{surveyName}}</div>\n  <table class=' table has-background-success-light is-narrow'>\n    <tr>\n      <td><label>First Name: </label></td>\n      <td><input  \n        #firstName\n        autofocus\n        value= {{firstNameInput}}\n        size=\"16\"\n        (change)=firstNameChg(firstName.value)\n        autocomplete=\"off\"></td>\n    </tr>\n    <tr>\n      <td><label>Last Name: </label></td>\n      <td><input  \n        #lastName\n        value= {{lastNameInput}}\n        size=\"16\"\n        (change)=lastNameChg(lastName.value)\n        autocomplete=\"off\"></td>\n    </tr>\n    <tr>\n      <td><label>Phone (last four digits): </label></td>\n      <td><input  \n        #phone\n        maxlength=\"4\"\n        value= {{phoneInput}}\n        size=\"4\"\n        (change)=phoneChg(phone.value)\n        autocomplete=\"off\"></td>\n    </tr>\n\n    <tr> <td>&nbsp;</td> \n      <td><button \n        class='button is-link is-pulled-right  is-small is-outlined'\n        (click)='doSign()'\n        >go</button></td>\n    </tr>\n  </table>\n  &nbsp;\n</section>\n\n\n\n<section *ngIf=\"showQuestHtml\" class=\"hero\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <h3 *ngIf='!questHasLinBrk' class=\"subtitle mb-5 has-text-centered\"> \n        {{curPreQuest}}  </h3>\n      <h3 *ngIf='questHasLinBrk' class=\"subtitlev mb-5\">         \n        {{curPreQuest}}  </h3>\n      <h2 *ngIf='!questHasLinBrk' class='title  has-text-centered'> \n        {{curQuestTxt}} </h2>\n      <h2 *ngIf='questHasLinBrk' class='title  selz-pre-line'> \n        {{curQuestTxt}} </h2>\n    </div>\n  </div>\n</section >\n\n<div *ngIf=\"showAnswerGroupHtml\" class=\"level is-mobile\">\n  <div *ngFor=\"let caf of curAcaFrame\"\n        class='level-item has-text-weight-semibold'  > {{caf}}\n  </div>\n</div>\n\n<div *ngIf=\"showAnswerGroupHtml\" class=\"columns is-mobile box \"> \n  <div class=\"column\" *ngFor=\"let x of curAca; let i = index\">\n    <button class='button is-link is-fullwidth'\n    (click)='answerClicked(i)'>{{x}}</button>\n  </div>\n</div>\n\n \n<div *ngIf=\"showDoneHtml\" class=\" ml-3 mr-3 has-background-primary-light\" >  \n  Your results have been forwarded to an administrator.\n  <br>\n    This QnA Tool was created by the \n    <a href=\"https://flyTechFree.com\">Fly Tech Free </a> company.  \n  <br>\n  We appreciate your comments about this particular QnA or the QnA Tool in general. \n  <br> \n  Please email us at: <b>flyTechFree@gmail.com </b>\n</div>\n\n<button *ngIf=\"showDiagButHtml\" class='button is-link'(click)='setScrDiagOnOff()'>\n  show/hide diagnostics \n</button>\n\n<!-- start diagnostics -->\n<section *ngIf=\"showDiagHtml\" class='ml-2' >\n  <div>\n    previous answer points: {{hisAnsPoints}} <br>\n    <!-- answers stored to db so far:  {{answerCnt}} <br> -->\n    <!-- scoring rounds completed so far: {{scoreRound-1}} <br>\n    scores stored to db so far:  {{scoreRecsWritten}} <br> -->\n  </div>\n\n  <table class='table is-striped  is-bordered'>\n    <thead class='has-background-info'>\n      <tr>\n        <th>subset</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let s of subsetArray\">\n        <th> {{s.subset}} </th>\n      </tr>\n    </tbody>\n  </table>\n\n  <table class='table is-striped  is-bordered'>\n    <thead class='has-background-info'>\n      <tr>\n        <th>nbr</th>\n        <th>preQuest</th>\n        <th>questTxt</th>\n        <th>subset</th>\n        <th>accum</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let q of allQuestions\">\n        <th> {{q.questNbr}} </th>\n        <th> {{q.preQuest}} </th>\n        <th>  {{q.questTxt}} </th>\n        <th>  {{q.subset}} </th>\n        <th>  {{q.accum[0]}} </th>\n      </tr>\n    </tbody>\n  </table>\n\n  <table class='table is-striped  is-bordered'>\n    <thead class='has-background-info'>\n      <tr>\n        <th>accum</th>\n        <th>oper</th>\n        <th>thresh</th>\n        <th>subset</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let r of rulesArray\">\n        <th> {{r.accum}}   </th>\n        <th> {{r.oper}}    </th>\n        <th>  {{r.thresh}} </th>\n        <th>  {{r.subset}} </th>\n      </tr>\n    </tbody>\n  </table>\n\n  <table class='table is-striped  is-bordered'>\n    <thead class='has-background-info'>\n      <tr>\n        <th>nbr</th>\n        <th>preQuest</th>\n        <th>questTxt</th>\n        <th>subset</th>\n        <th>accum</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let q of activeQuestions\">\n        <td> {{q.questNbr}} </td>\n        <td> {{q.preQuest}} </td>\n        <td> {{q.questTxt}} </td>\n        <td> {{q.subset}}   </td>\n        <td> {{q.accum[0]}} </td>\n      </tr>\n    </tbody>\n  </table>\n  \n  <table class='table is-striped  is-bordered'>\n    <thead class='has-background-info'>\n      <tr> \n        <th>cust</th>\n        <th>qid</th>\n        <th>groupNbr</th>\n        <th>groupName</th>\n        <th>seq</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let g of groupArray\">\n        <td> {{g.cust}} </td>\n        <td> {{g.qid}} </td>\n        <td> {{g.groupNbr}} </td>\n        <td> {{g.groupName}}   </td>\n        <td> {{g.seq}}   </td>\n      </tr>\n    </tbody>\n  </table>\n\n</section>\n<!-- end diagnostics -->\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n//import {api} from './utils/api'\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* Api methods to call /functions */\r\n\r\nconst create = (data) => {\r\n  return fetch('/.netlify/functions/todos-create', {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst readAll = () => {\r\n  return fetch('/.netlify/functions/todos-read-all').then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst update = (todoId, data) => {\r\n  return fetch(`/.netlify/functions/todos-update/${todoId}`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst deleteTodo = (todoId) => {\r\n  return fetch(`/.netlify/functions/todos-delete/${todoId}`, {\r\n    method: 'POST',\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst batchDeleteTodo = (todoIds) => {\r\n  return fetch(`/.netlify/functions/todos-delete-batch`, {\r\n    body: JSON.stringify({\r\n      ids: todoIds\r\n    }),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n// const qtRead01 = (todoId, data) => {\r\n//   return fetch(`/.netlify/functions/qtRead01/${todoId}`, {\r\n//     body: JSON.stringify(data),\r\n//     //method: 'POST'\r\n//   }).then(response => {\r\n//     return response.json()\r\n//   })\r\n// }\r\n// const qtRead02 = (todoId, data) => {\r\n//   return fetch(`/.netlify/functions/qtRead02/${todoId}`, {\r\n//     body: JSON.stringify(data),\r\n//     //method: 'POST'\r\n//   }).then(response => {\r\n//     return response.json()\r\n//   })\r\n// }\r\n// const qtRead03 = (faunaRecId, data) => {\r\n//   //return fetch(`/.netlify/functions/qtRead03/${todoId}`, {\r\n//     return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtRead03/${faunaRecId}`, {\r\n//     body: JSON.stringify(data),\r\n//     //method: 'POST'\r\n//   }).then(response => {\r\n//     return response.json()\r\n//   })\r\n// }\r\n\r\nconst qtWriteAnswer = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtWriteAnswer`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtWriteQuestion = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtWriteQuestion`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\n// const qtWriteSubset = (data) => {\r\n//   return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtWriteSubset`, {\r\n//     body: JSON.stringify(data),\r\n//     method: 'POST'\r\n//   }).then(response => {\r\n//     return response.json()\r\n//   })\r\n// }\r\n\r\nconst qtDeleteQuestion = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtDeleteQuestion`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtUpdateQuestion = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtUpdateQuestion`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtUpdateRule = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtUpdateRule`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\n// const qtUpdateSubset = (data) => {\r\n//   return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtUpdateSubset`, {\r\n//     body: JSON.stringify(data),\r\n//     method: 'POST'\r\n//   }).then(response => {\r\n//     return response.json()\r\n//   })\r\n// }\r\n\r\nconst qtDeleteRule = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtDeleteRule`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtReadQuestions = (custParmIn,qidParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadQuestions'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\n// const qtReadSubsets = (custParmIn,qidParmIn) => {\r\n//   let myUrl = \r\n//   'https://qncsurvey.netlify.app/.netlify/functions/qtReadSubsets'\r\n//   +'?cust=' + custParmIn\r\n//   +'&qid=' + qidParmIn\r\n//   return fetch(myUrl)\r\n//    .then((response) => {\r\n//     return response.json()\r\n//   })\r\n// }\r\n\r\nconst qtReadRules= (custParmIn,qidParmIn) => {\r\n  let myUrl = \r\n  'https://qncsurvey.netlify.app/.netlify/functions/qtReadRules'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n     return response.json()\r\n  })\r\n}\r\n\r\nconst qtWriteScore = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtWriteScore`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtWriteRule = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtWriteRule`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtMassDeleteAnswers = (custParmIn,qidParmIn,userParmIn) => {\r\n  //alert('api.js 194'+userParmIn)\r\n  let myUrl = \r\n  'https://qncsurvey.netlify.app/.netlify/functions/qtMassDeleteAnswers'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  + '&user=' + userParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n     return response.json()\r\n  })\r\n}\r\nconst qtMassDeleteScores = (custParmIn,qidParmIn,userParmIn) => {\r\n  let myUrl = \r\n  'https://qncsurvey.netlify.app/.netlify/functions/qtMassDeleteScores'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  + '&user=' + userParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n     return response.json()\r\n  })\r\n}\r\nconst qtMassDeleteQuestions = (custParmIn,qidParmIn) => {\r\n  let myUrl = \r\n  'https://qncsurvey.netlify.app/.netlify/functions/qtMassDeleteQuestions'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n     return response.json()\r\n  })\r\n}\r\n\r\nconst qtMassDeleteRules = (custParmIn,qidParmIn) => {\r\n  let myUrl = \r\n  'https://qncsurvey.netlify.app/.netlify/functions/qtMassDeleteRules'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n     return response.json()\r\n  })\r\n}\r\n\r\nconst qtReadScores = (custParmIn,qidParmIn,quserIdParmin,userDateTimeParmin) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadScores'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  + '&userId=' + quserIdParmin\r\n  + '&userDateTime=' + userDateTimeParmin\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\n// const qtReadMultScores = (custParmIn,qidParmIn,quserIdParmin,userDateTimeParmin) => {\r\nconst qtReadMultScores = (custParmIn,qidParmIn) => {\r\n    let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadMultScores'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\n\r\nconst qtReadAnswers = (custParmIn,qidParmIn,quserIdParmin,userDateTimeParmin) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadAnswers'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  + '&userId=' + quserIdParmin\r\n  + '&userDateTime=' + userDateTimeParmin\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtReadInvitations = (custParmIn,qidParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadInvitations'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtReadUsers = (custParmIn,qidParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadUsers'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtReadSubscribers = (subscriberParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadSubscribers'\r\n  + '?subscriber=' + subscriberParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtReadTeamMembers = (teamMemberParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadTeamMembers'\r\n  + '?teamMember=' + teamMemberParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n} \r\nconst qtReadScoreboards = (custParmIn,qidParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadScoreboards'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtUpdateScoreboard = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtUpdateScoreboard`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtDeleteScoreboard = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtDeleteScoreboard`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtAddScoreboard = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtAddScoreboard`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtAddParticipant = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtAddParticipant`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtUpdateParticipant = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtUpdateParticipant`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtReadUser = (custParmIn,qidParmIn,userParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadUser'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  + '&user=' + userParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtReadGroups = (custParmIn,qidParmIn) => {\r\n  let myUrl =  'https://qna.flyTechFree.com/.netlify/functions/qtReadGroups'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtAddGroup = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtAddGroup`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtUpdateGroup = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtUpdateGroup`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtDeleteGroup = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtDeleteGroup`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtDeleteParticipant = (custParmIn,qidParmIn,userParmIn) => {\r\n  let myUrl = \r\n  'https://qncsurvey.netlify.app/.netlify/functions/qtDeleteParticipant'\r\n  + '?cust=' + custParmIn\r\n  + '&qid='  + qidParmIn\r\n  + '&user=' + userParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n     return response.json()\r\n  })\r\n} // end qtDeleteParticipant\r\n\r\nconst qtUpdateScore = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtUpdateScore`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtReadScore = (custParmIn,qidParmIn,userParmIn,scoreboardNameParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadScore'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  + '&user=' + userParmIn\r\n  + '&scoreboardName=' + scoreboardNameParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtAddSurvey = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtAddSurvey`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtReadSurveys = (custParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadSurveys'\r\n  + '?cust=' + custParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtReadSurvey = (custParmIn,qidParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadSurvey'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => { return response.json() })\r\n}\r\nconst qtUpdateSurvey = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtUpdateSurvey`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtReadScoreboardRanges = (custParmIn,qidParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadScoreboardRanges'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => { return response.json() })\r\n}\r\n \r\nconst qtAddScoreboardRange = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtAddScoreboardRange`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtUpdateScoreboardRange = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtUpdateScoreboardRange`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtDeleteScoreboardRange = (data) => {\r\n  return fetch(`https://qncsurvey.netlify.app/.netlify/functions/qtDeleteScoreboardRange`, {\r\n    body: JSON.stringify(data),\r\n    method: 'POST'\r\n  }).then(response => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtReadMultAnswers = (custParmIn,qidParmIn) => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadMultAnswers'\r\n  + '?cust=' + custParmIn\r\n  + '&qid=' + qidParmIn\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\n\r\nconst qtReadMultSubscribers = () => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadMultSubscribers'\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtReadMultTeamMembers = () => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadMultTeamMembers'\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n}\r\nconst qtReadMultSurveys = () => {\r\n  let myUrl =  'https://qncsurvey.netlify.app/.netlify/functions/qtReadMultSurveys'\r\n  return fetch(myUrl)\r\n   .then((response) => {\r\n    return response.json()\r\n  })\r\n} // end qtReadMultSurveys\r\n\r\nexport default  {\r\n  create: create,\r\n  readAll: readAll,\r\n  update: update,\r\n  delete: deleteTodo,\r\n  batchDelete: batchDeleteTodo,\r\n  qtWriteQuestion: qtWriteQuestion,\r\n  qtDeleteQuestion: qtDeleteQuestion,\r\n  qtDeleteRule: qtDeleteRule,\r\n  qtWriteAnswer: qtWriteAnswer,\r\n  qtReadQuestions: qtReadQuestions,\r\n  qtWriteScore: qtWriteScore,\r\n  qtReadRules: qtReadRules,\r\n  qtWriteRule: qtWriteRule,\r\n  qtUpdateQuestion: qtUpdateQuestion,\r\n  qtUpdateRule: qtUpdateRule,\r\n  qtMassDeleteAnswers: qtMassDeleteAnswers,\r\n  qtMassDeleteScores: qtMassDeleteScores,\r\n  qtMassDeleteQuestions: qtMassDeleteQuestions,\r\n  qtMassDeleteRules: qtMassDeleteRules,\r\n  qtReadScores: qtReadScores,\r\n  qtReadAnswers: qtReadAnswers,\r\n  qtReadInvitations: qtReadInvitations,\r\n  qtReadUsers: qtReadUsers,\r\n  qtReadUser: qtReadUser,\r\n  qtReadSubscribers: qtReadSubscribers,\r\n  qtReadTeamMembers: qtReadTeamMembers,\r\n  qtReadScoreboards: qtReadScoreboards,\r\n  qtAddScoreboard: qtAddScoreboard,\r\n  qtAddParticipant:qtAddParticipant,\r\n  qtUpdateScoreboard: qtUpdateScoreboard,\r\n  qtUpdateParticipant: qtUpdateParticipant,\r\n  qtDeleteScoreboard: qtDeleteScoreboard,\r\n  qtReadGroups: qtReadGroups,\r\n  qtAddGroup: qtAddGroup,\r\n  qtUpdateGroup: qtUpdateGroup,\r\n  qtDeleteGroup: qtDeleteGroup,\r\n  qtUpdateScore: qtUpdateScore,\r\n  qtReadScore: qtReadScore,\r\n  qtDeleteParticipant: qtDeleteParticipant,\r\n  qtAddSurvey: qtAddSurvey,\r\n  qtReadSurveys: qtReadSurveys,\r\n  qtReadSurvey: qtReadSurvey,\r\n  qtUpdateSurvey: qtUpdateSurvey,\r\n  qtReadMultScores: qtReadMultScores,\r\n  qtReadScoreboardRanges : qtReadScoreboardRanges,\r\n  qtAddScoreboardRange : qtAddScoreboardRange,\r\n  qtUpdateScoreboardRange : qtUpdateScoreboardRange,\r\n  qtDeleteScoreboardRange : qtDeleteScoreboardRange,\r\n  qtReadMultAnswers : qtReadMultAnswers,\r\n  qtReadMultSubscribers : qtReadMultSubscribers,\r\n  qtReadMultTeamMembers : qtReadMultTeamMembers,\r\n  qtReadMultSurveys :qtReadMultSurveys\r\n} ","// callers of funcs in this here apiSupabase must await  fetch-promise to resolve.\r\n// example from a caller:\r\n// this.supaRes = await apiSupabase.addSupabase(tbl,flds)\r\n// grand parent and great grandparent func will have to wait, if they use fetch response.\r\n\r\n  let readSupabase = (tbl,flds) => {\r\n    console.log(Date.now()/10000,'running readSupabase in apiSupabase')\r\n    let myFldNamesArray = Object.keys(flds)  //.map(x => x )\r\n    let myFldValsArray = Object.values(flds) //.map(x => x + 'fee' )\r\n    let myUrl = 'https://play.flytechfree.com/.netlify/functions/readSupabase'\r\n    myUrl += '?tbl=' + tbl\r\n    for (let i=0;  i < myFldNamesArray.length; i++){\r\n      myUrl += '&' + myFldNamesArray[i]\r\n      myUrl += '=' + myFldValsArray[i]\r\n    } // end for loop\r\n    console.log('12 apiSupabase readSupabase myUrl: ', myUrl)\r\n    return fetch(myUrl)\r\n     .then((response) => {\r\n       console.log (Date.now()/10000, '15 readSupabase .then of fetch')\r\n       return response.json()\r\n     }) // end .then\r\n  } // end readSupabase //////////////////////////////////////////////////////\r\n\r\n  async function addSupabase (tbl,flds) {\r\n    console.log(Date.now()/10000,'21 running addSupabase in apiSupabase.js')\r\n    let myFldNamesArray = Object.keys(flds)  //.map(x => x )\r\n    let myFldValsArray = Object.values(flds) //.map(x => x )\r\n    let myUrl = new URL (\"https://play.flytechfree.com/.netlify/functions/addSupabase\")\r\n    let myType = ''\r\n    let tmpFldVal = ''\r\n    myUrl.searchParams.append(\"tbl\",tbl)\r\n    for (let i=0;  i < myFldNamesArray.length; i++){    \r\n      myType = (typeof (myFldValsArray[i]))\r\n      tmpFldVal = '' + myFldValsArray[i]\r\n      if (tmpFldVal.includes('\"')){\r\n        console.log('tmpFldVal includes a dbl quote.') //chg double quotes cuz supabase chokes.\r\n        tmpFldVal = '' +  myFldValsArray[i].replaceAll('\"',\"'\")\r\n        myFldValsArray[i] = tmpFldVal\r\n        console.log('myFldValsArray[i]', myFldValsArray[i])\r\n      } // end if\r\n     \r\n      if (tmpFldVal.includes('\\n')){\r\n        console.log('tmpFldVal includes a newline.') //chg newline cuz supabase chokes.\r\n        tmpFldVal = '' +  myFldValsArray[i].replaceAll('\\n',\"\\\\n\")\r\n        myFldValsArray[i] = tmpFldVal\r\n        console.log('myFldValsArray[i]', myFldValsArray[i])\r\n      } // end if\r\n\r\n      if ( myType ==  'object') {\r\n        //console.log('yes myType is an object.').  in this case, it means this is a sub-array.\r\n        myFldValsArray[i] = '{' + myFldValsArray[i] + '}' // postGres wants brackets on sub-array.\r\n      } // end if\r\n      myUrl.searchParams.append(myFldNamesArray[i],myFldValsArray[i]) // magic url append\r\n    } // end for\r\n    let response = await fetch(myUrl) // first return is a promise,\r\n    return response.json()  // caller of api.addSupbase must wait also.\r\n  } // end addSupabase //////////////////////////////////////////////////////////\r\n  \r\n  async function delSupabase (tbl,flds)  {\r\n    console.log(Date.now()/10000,'running delSupabase in apiSupabase')\r\n    let myFldNamesArray = Object.keys(flds)  //.map(x => x )\r\n    let myFldValsArray = Object.values(flds) //.map(x => x + 'fee' )\r\n    let myUrl = 'https://play.flytechfree.com/.netlify/functions/delSupabase'\r\n    myUrl += '?tbl=' + tbl\r\n    for (let i=0;  i < myFldNamesArray.length; i++){\r\n      myUrl += '&' + myFldNamesArray[i]\r\n      myUrl += '=' + myFldValsArray[i]\r\n    } // end for loop\r\n    console.log('69 apiSupabase delSupabase myUrl: ', myUrl)\r\n    let response = await fetch(myUrl)\r\n    return response.json() \r\n  } // end delSupabase //////////////////////////////////////////////////////\r\n  \r\n  let chgSupabase = (tbl,flds) => {\r\n    console.log(Date.now()/10000,'running chgSupabase in apiSupabase')\r\n    let myFldNamesArray = Object.keys(flds)  //.map(x => x )\r\n    let myFldValsArray = Object.values(flds) //.map(x => x + 'fee' )\r\n    let myUrl = 'https://play.flytechfree.com/.netlify/functions/chgSupabase'\r\n    myUrl += '?tbl=' + tbl\r\n    for (let i=0;  i < myFldNamesArray.length; i++){\r\n      myUrl += '&' + myFldNamesArray[i]\r\n      myUrl += '=' + myFldValsArray[i]\r\n    } // end for loop\r\n    console.log('87 apiSupabase chgSupabase myUrl: ', myUrl)\r\n    return fetch(myUrl)\r\n     .then((response) => {\r\n       console.log (Date.now()/10000, '90 chgSupabase .then of fetch')\r\n       return response.json()\r\n     }) // end .then\r\n  } // end chgSupabase //////////////////////////////////////////////////////\r\n  \r\n  let delSupabaseMulti = (tbl,flds) => {\r\n    console.log(Date.now()/10000,'running delSupabaseMulti in apiSupabase')\r\n    let myFldNamesArray = Object.keys(flds)  //.map(x => x )\r\n    let myFldValsArray = Object.values(flds) //.map(x => x + 'fee' )\r\n    let myUrl = 'https://play.flytechfree.com/.netlify/functions/delSupabaseMulti'\r\n    myUrl += '?tbl=' + tbl\r\n    for (let i=0;  i < myFldNamesArray.length; i++){\r\n      myUrl += '&' + myFldNamesArray[i]\r\n      myUrl += '=' + myFldValsArray[i]\r\n    } // end for loop\r\n    console.log('12 apiSupabase delSupabaseMulti myUrl: ', myUrl)\r\n    return fetch(myUrl)\r\n     .then((response) => {\r\n       console.log (Date.now()/10000, '15 delSupabaseMulti .then of fetch')\r\n       return response.json()\r\n     }) // end .then\r\n  } // end delSupabaseMulti //////////////////////////////////////////////////////\r\n\r\n  export default  {\r\n    readSupabase: readSupabase,\r\n    addSupabase: addSupabase,\r\n    chgSupabase: chgSupabase,\r\n    delSupabase: delSupabase,\r\n    delSupabaseMulti: delSupabaseMulti\r\n  } // end export\r\n","async function getFaunaOrSupabase() {\r\n  console.log('running getFaunaOrSupabase in getEnvVars.js')\r\n  let myUrl = 'https://qna.flytechfree.com/.netlify/functions/getFaunaOrSupabase'\r\n\r\n  let response =   await fetch(myUrl) // magic double-await, promise / result\r\n  let resObj   =   await response.json()\r\n  // resObj is like: {faunaOrSupabase: 'fauna'}\r\n  // let resTxt   =   await response.text() // .text() or .json() cant do both! \r\n  // looking at the reponse can only be done once !!!!\r\n  console.log('resObj from getFaunaOrSupabase')\r\n  console.log(resObj)\r\n  console.log ('but overriding faunaOrSupabase to fauna til we get this puzzle figures out')\r\n    // resObj is like: {faunaOrSupabase: 'fauna'}\r\n  let myResponseString = resObj.faunaOrSupabase\r\n  if (myResponseString != 'fauna' && myResponseString != 'supabase') {\r\n    myResponseString = 'fauna' // default\r\n  }\r\n  //selz oct2024 puzzle why always supabase?\r\n  //let's do fauna til you get this figured out.\r\n  myResponseString = 'fauna' // default\r\n\r\n  return myResponseString // a string 'fauna' or 'supabase'\r\n\r\n  // let faunaOrSupabase  =  process.env.faunaOrSupabase\r\n} // end  fetchEnvFaunaOrSupabase\r\n\r\nexport default  {\r\n  getFaunaOrSupabase: getFaunaOrSupabase\r\n} // end export\r\n"],"names":["readSupabase","tbl","flds","console","log","Date","now","myFldNamesArray","Object","keys","myFldValsArray","values","myUrl","i","length","fetch","then","response","json","addSupabase","URL","myType","tmpFldVal","searchParams","append","includes","replaceAll","delSupabase","chgSupabase","delSupabaseMulti","getFaunaOrSupabase","resObj","myResponseString","faunaOrSupabase"],"sourceRoot":"webpack:///"}